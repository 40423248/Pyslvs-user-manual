<?xml version="1.0" encoding="utf-8"?>
<!-- Created by Leo: http://leoeditor.com/leo_toc.html -->
<leo_file xmlns:leo="http://leoeditor.com/namespaces/leo-python-editor/1.1" >
<leo_header file_format="2" tnodes="0" max_tnode_index="0" clone_windows="0"/>
<globals body_outline_ratio="0.5" body_secondary_ratio="0.5">
	<global_window_position top="50" left="50" height="500" width="700"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="yen.20170108171605.1"><vh>@settings</vh>
<v t="yen.20170108171605.2"><vh>@data qt-gui-plugin-style-sheet</vh></v>
<v t="yen.20170108171605.3"><vh>@string initial_split_orientation = horizontal</vh></v>
</v>
<v t="yen.20170108171622.1"><vh>有關 2017springcd</vh></v>
<v t="yen.20170108171733.1" a="E"><vh>@path ../</vh>
<v t="yen.20170108171733.2"><vh>@button pelican-blog</vh></v>
<v t="yen.20170108171733.3"><vh>@edit README.md</vh></v>
<v t="yen.20170108171733.4"><vh>@edit .gitignore</vh></v>
<v t="yen.20170108171733.5"><vh>Pelican 設定</vh>
<v t="yen.20170108171733.6"><vh>@edit local_publishconf.py</vh></v>
<v t="yen.20170108171733.7"><vh>@edit pelicanconf.py</vh></v>
</v>
<v t="yen.20170215103217.1"><vh>編輯 template</vh>
<v t="yen.20170215103228.1"><vh>@path theme/pelican-bootstrap3_local/templates</vh>
<v t="yen.20170215103332.1"><vh>@edit base.html</vh></v>
</v>
</v>
<v t="yen.20170120110024.1" a="E"><vh>@clean index.html</vh>
<v t="yen.20170120110024.2" a="E"><vh>html</vh>
<v t="yen.20170120110024.3"><vh>head</vh></v>
<v t="yen.20170120110024.4" a="E"><vh>body</vh>
<v t="yen.20170120110024.5" a="E"><vh>reveal div</vh>
<v t="yen.20170120110024.6" a="E"><vh>slides div</vh>
<v t="yen.20170120110024.7"><vh>封面投影片</vh>
<v t="yen.20170120110024.8"><vh>封面投影片內容</vh></v>
<v t="leo.20170304145953.1"><vh>2017CD Week1</vh></v>
</v>
<v t="yen.20170120110024.9"><vh>快捷鍵</vh>
<v t="yen.20170120110024.10"><vh>投影片快捷鍵</vh></v>
</v>
<v t="yen.20170120110024.11"><vh>Week1</vh>
<v t="yen.20170120110024.12"><vh>Week1 content</vh>
<v t="yen.20170120110024.13"><vh>Week1-1</vh></v>
</v>
<v t="yen.20170120110024.14"><vh>Week1-2</vh>
<v t="yen.20170120110024.15"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170304152605.1"><vh>Week1-3</vh>
<v t="leo.20170304152605.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170304155027.1"><vh>Week1-4</vh>
<v t="leo.20170304155027.2"><vh>引用程式碼</vh></v>
</v>
<v t="yen.20170120110024.16"><vh>導入影片</vh>
<v t="yen.20170120110024.17"><vh>iframe 導入影片</vh></v>
</v>
</v>
<v t="leo.20170304161410.1"><vh>Week2</vh>
<v t="leo.20170304161410.2"><vh>Week2 content</vh>
<v t="leo.20170304161410.3"><vh>Week2-1</vh></v>
</v>
<v t="leo.20170304161410.4" a="E"><vh>Week2-2</vh>
<v t="leo.20170304161410.5"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170304161410.6" a="E"><vh>Week2-3</vh>
<v t="leo.20170304161410.7"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170304161410.8" a="E"><vh>Week2-4</vh>
<v t="leo.20170304161410.9"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170412115648.1" a="E"><vh>Week2-5</vh>
<v t="leo.20170412115648.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170304161410.10"><vh>導入影片</vh>
<v t="leo.20170304161410.11"><vh>iframe 導入影片</vh></v>
</v>
</v>
<v t="leo.20170315090154.1"><vh>Week3</vh>
<v t="leo.20170315090154.2"><vh>Week3 content</vh>
<v t="leo.20170315090154.3"><vh>Week3-1</vh></v>
</v>
<v t="leo.20170315090154.4"><vh>Week3-2</vh>
<v t="leo.20170315090154.5"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170315090154.6"><vh>Week3-3</vh>
<v t="leo.20170315090154.7"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170315090154.8"><vh>Week3-4</vh>
<v t="leo.20170315090154.9"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170412101850.1"><vh>Week3-5</vh>
<v t="leo.20170412101850.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170412101853.1"><vh>Week3-6</vh>
<v t="leo.20170412101853.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170315110355.1"><vh>Week3-7</vh>
<v t="leo.20170315110355.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170315090154.10"><vh>導入影片</vh>
<v t="leo.20170315090154.11"><vh>iframe 導入影片</vh></v>
</v>
</v>
<v t="leo.20170315092026.1"><vh>Week4</vh>
<v t="leo.20170315092026.2"><vh>Week4 content</vh>
<v t="leo.20170315092026.3"><vh>Week4-1</vh></v>
</v>
<v t="leo.20170315092026.4"><vh>Week4-2</vh>
<v t="leo.20170315092026.5"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170315092026.6"><vh>Week4-3</vh>
<v t="leo.20170315092026.7"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170315092026.8"><vh>Week4-4</vh>
<v t="leo.20170315092026.9"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170411225536.1"><vh>Week4-5</vh>
<v t="leo.20170411225536.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170315092026.10"><vh>導入影片</vh>
<v t="leo.20170315092026.11"><vh>iframe 導入影片</vh></v>
</v>
</v>
<v t="leo.20170328215422.1"><vh>Week5</vh>
<v t="leo.20170328215422.2"><vh>Week5 content</vh>
<v t="leo.20170328215422.3"><vh>Week5-1</vh></v>
</v>
<v t="leo.20170328215422.4"><vh>Week5-2</vh>
<v t="leo.20170328215422.5"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170328215422.6"><vh>Week5-3</vh>
<v t="leo.20170328215422.7"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170328215422.8"><vh>Week5-4</vh>
<v t="leo.20170328215422.9"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170411232716.1"><vh>Week5-5</vh>
<v t="leo.20170411232716.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170412094138.1"><vh>Week5-6</vh>
<v t="leo.20170412094138.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170412094610.1"><vh>Week5-7</vh>
<v t="leo.20170412094610.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170412094632.1"><vh>Week5-8</vh>
<v t="leo.20170412094632.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170328215422.10"><vh>導入影片</vh>
<v t="leo.20170328215422.11"><vh>iframe 導入影片</vh></v>
</v>
</v>
<v t="leo.20170411163010.1"><vh>Week6</vh>
<v t="leo.20170411163010.2"><vh>Week6 content</vh>
<v t="leo.20170411163010.3"><vh>Week6-1</vh></v>
</v>
<v t="leo.20170411163010.4"><vh>Week6-2</vh>
<v t="leo.20170411163010.5"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170411163010.6"><vh>Week6-3</vh>
<v t="leo.20170411163010.7"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170411163010.8"><vh>Week6-4</vh>
<v t="leo.20170411163010.9"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170411163010.10"><vh>導入影片</vh>
<v t="leo.20170411163010.11"><vh>iframe 導入影片</vh></v>
</v>
</v>
<v t="leo.20170411231331.1"><vh>Week7</vh>
<v t="leo.20170411231331.2"><vh>Week7 content</vh>
<v t="leo.20170411231331.3"><vh>Week7-1</vh></v>
</v>
<v t="leo.20170411231331.4"><vh>Week7-2</vh>
<v t="leo.20170411231331.5"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170411231331.6"><vh>Week7-3</vh>
<v t="leo.20170411231331.7"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170411231331.8"><vh>Week7-4</vh>
<v t="leo.20170411231331.9"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170411231331.10"><vh>導入影片</vh>
<v t="leo.20170411231331.11"><vh>iframe 導入影片</vh></v>
</v>
</v>
<v t="leo.20170411235138.1"><vh>Week8</vh>
<v t="leo.20170411235138.2"><vh>Week8 content</vh>
<v t="leo.20170411235138.3"><vh>Week8-1</vh></v>
</v>
<v t="leo.20170411235138.4"><vh>Week8-2</vh>
<v t="leo.20170411235138.5"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170411235138.6"><vh>Week8-3</vh>
<v t="leo.20170411235138.7"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170411235138.8"><vh>Week8-4</vh>
<v t="leo.20170411235138.9"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170411235138.10"><vh>導入影片</vh>
<v t="leo.20170411235138.11"><vh>iframe 導入影片</vh></v>
</v>
</v>
<v t="leo.20170419092650.1"><vh>Week9</vh>
<v t="leo.20170419092650.2" a="E"><vh>Week9 content</vh>
<v t="leo.20170419092650.3"><vh>Week9-1</vh></v>
</v>
<v t="leo.20170419092650.4" a="E"><vh>Week9-2</vh>
<v t="leo.20170419092650.5"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170419092650.6"><vh>Week9-3</vh>
<v t="leo.20170419092650.7"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170419092650.8"><vh>Week9-4</vh>
<v t="leo.20170419092650.9"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170419094610.1"><vh>Week9-5</vh>
<v t="leo.20170419094610.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170419095524.1"><vh>Week9-6</vh>
<v t="leo.20170419095524.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170419110809.1"><vh>Week9-7</vh>
<v t="leo.20170419110809.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170419110948.1"><vh>Week9-8</vh>
<v t="leo.20170419110948.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170419114348.1"><vh>Week9-9</vh>
<v t="leo.20170419114348.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170419092650.10"><vh>導入影片1</vh>
<v t="leo.20170419092650.11"><vh>iframe 導入影片</vh></v>
</v>
<v t="leo.20170419111018.1"><vh>導入影片2</vh>
<v t="leo.20170419111018.2"><vh>iframe 導入影片</vh></v>
</v>
<v t="leo.20170426173211.1"><vh>導入影片3</vh>
<v t="leo.20170426173211.2"><vh>iframe 導入影片</vh></v>
</v>
</v>
<v t="leo.20170517091052.1"><vh>Week10</vh>
<v t="leo.20170517091052.2"><vh>Week10 content</vh>
<v t="leo.20170517091052.3"><vh>Week10-1</vh></v>
</v>
<v t="leo.20170517091052.4" a="E"><vh>Week10-2</vh>
<v t="leo.20170517091052.5"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170517091052.6"><vh>Week10-3</vh>
<v t="leo.20170517091052.7"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170517091052.8"><vh>Week10-4</vh>
<v t="leo.20170517091052.9"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170517091052.10"><vh>導入影片</vh>
<v t="leo.20170517091052.11"><vh>iframe 導入影片</vh></v>
</v>
</v>
<v t="leo.20170517091228.1"><vh>Week11</vh>
<v t="leo.20170517091228.2"><vh>Week11 content</vh>
<v t="leo.20170517091228.3"><vh>Week11-1</vh></v>
</v>
<v t="leo.20170517091228.4"><vh>Week11-2</vh>
<v t="leo.20170517091228.5"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170517091228.6"><vh>Week11-3</vh>
<v t="leo.20170517091228.7"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170517091228.8"><vh>Week11-4</vh>
<v t="leo.20170517091228.9"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170517095451.1"><vh>Week11-5</vh>
<v t="leo.20170517095451.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170517095507.1"><vh>Week11-6</vh>
<v t="leo.20170517095507.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170517095517.1"><vh>Week11-7</vh>
<v t="leo.20170517095517.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170517095524.1"><vh>Week11-8</vh>
<v t="leo.20170517095524.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170517095536.1"><vh>Week11-9</vh>
<v t="leo.20170517095536.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170517095548.1"><vh>Week11-10</vh>
<v t="leo.20170517095548.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170517095600.1"><vh>Week11-11</vh>
<v t="leo.20170517095600.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170517102725.1"><vh>Week11-12</vh>
<v t="leo.20170517102725.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170517102728.1"><vh>Week11-13</vh>
<v t="leo.20170517102728.2"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170517091228.10"><vh>導入影片</vh>
<v t="leo.20170517091228.11"><vh>iframe 導入影片</vh></v>
</v>
</v>
<v t="leo.20170517103152.1"><vh>Week12</vh>
<v t="leo.20170517103152.2"><vh>Week12 content</vh>
<v t="leo.20170517103152.3"><vh>Week12-1</vh></v>
</v>
<v t="leo.20170517103152.4"><vh>Week12-2</vh>
<v t="leo.20170517103152.5"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170517103152.6"><vh>Week12-3</vh>
<v t="leo.20170517103152.7"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170517103152.8"><vh>Week12-4</vh>
<v t="leo.20170517103152.9"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170517103152.10"><vh>導入影片</vh>
<v t="leo.20170517103152.11"><vh>iframe 導入影片</vh></v>
</v>
</v>
<v t="leo.20170517103219.1"><vh>Week13</vh>
<v t="leo.20170517103219.2" a="E"><vh>Week13 content</vh>
<v t="leo.20170517103219.3"><vh>Week13-1</vh></v>
</v>
<v t="leo.20170517103219.4" a="E"><vh>Week13-2</vh>
<v t="leo.20170517103219.5"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170517103219.10" a="E"><vh>導入影片</vh>
<v t="leo.20170517103219.11"><vh>iframe 導入影片</vh></v>
</v>
</v>
<v t="leo.20170524225239.1"><vh>Week14</vh>
<v t="leo.20170524225239.2"><vh>Week14 content</vh>
<v t="leo.20170524225239.3"><vh>Week14-1</vh></v>
</v>
<v t="leo.20170524225239.4" a="E"><vh>Week14-2</vh>
<v t="leo.20170524225239.5"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170524225239.6"><vh>Week14-3</vh>
<v t="leo.20170524225239.7"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170524225239.8"><vh>Week14-4</vh>
<v t="leo.20170524225239.9"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170524225239.10"><vh>導入影片</vh>
<v t="leo.20170524225239.11"><vh>iframe 導入影片</vh></v>
</v>
</v>
<v t="leo.20170531083720.1"><vh>Week15</vh>
<v t="leo.20170531083720.2"><vh>Week15 content</vh>
<v t="leo.20170531083720.3"><vh>Week15-1</vh></v>
</v>
<v t="leo.20170531083720.4"><vh>Week15-2</vh>
<v t="leo.20170531083720.5"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170531083720.6"><vh>Week15-3</vh>
<v t="leo.20170531083720.7"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170531083720.8"><vh>Week15-4</vh>
<v t="leo.20170531083720.9"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170531083720.10"><vh>導入影片</vh>
<v t="leo.20170531083720.11"><vh>iframe 導入影片</vh></v>
</v>
</v>
<v t="leo.20170607002207.1"><vh>Week16</vh>
<v t="leo.20170607002207.2"><vh>Week16 content</vh>
<v t="leo.20170607002207.3"><vh>Week16-1</vh></v>
</v>
<v t="leo.20170607002207.4" a="E"><vh>Week16-2</vh>
<v t="leo.20170607002207.5"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170607002207.6"><vh>Week16-3</vh>
<v t="leo.20170607002207.7"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170607002207.8"><vh>Week16-4</vh>
<v t="leo.20170607002207.9"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170607002207.10"><vh>導入影片</vh>
<v t="leo.20170607002207.11"><vh>iframe 導入影片</vh></v>
</v>
</v>
<v t="leo.20170621084842.1"><vh>Week17</vh>
<v t="leo.20170621084842.2"><vh>Week17 content</vh>
<v t="leo.20170621084842.3"><vh>Week16-1</vh></v>
</v>
<v t="leo.20170621084842.4"><vh>Week17-2</vh>
<v t="leo.20170621084842.5"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170621084842.6"><vh>Week17-3</vh>
<v t="leo.20170621084842.7"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170621084842.8"><vh>Week17-4</vh>
<v t="leo.20170621084842.9"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170621084842.10"><vh>導入影片</vh>
<v t="leo.20170621084842.11"><vh>iframe 導入影片</vh></v>
</v>
</v>
<v t="leo.20170621084849.1"><vh>Week18</vh>
<v t="leo.20170621084849.2" a="E"><vh>Week18 content</vh>
<v t="leo.20170621084849.3"><vh>Week18-1</vh></v>
</v>
<v t="leo.20170621084849.4"><vh>Week18-2</vh>
<v t="leo.20170621084849.5"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170621084849.6"><vh>Week18-3</vh>
<v t="leo.20170621084849.7"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170621084849.8"><vh>Week18-4</vh>
<v t="leo.20170621084849.9"><vh>引用程式碼</vh></v>
</v>
<v t="leo.20170621084849.10"><vh>導入影片</vh>
<v t="leo.20170621084849.11"><vh>iframe 導入影片</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="yen.20170108171733.71" a="E"><vh>@path content</vh>
<v t="yen.20170221100209.1"><vh>@edit 2017Week1.md</vh></v>
<v t="leo.20170315090339.1"><vh>@edit 2017Week2.md</vh></v>
<v t="leo.20170315091533.1"><vh>@edit 2017Week3.md</vh></v>
<v t="leo.20170315092052.1"><vh>@edit 2017Week4.md</vh></v>
<v t="leo.20170328215500.1"><vh>@edit 2017Week5.md</vh></v>
<v t="leo.20170411163046.1"><vh>@edit 2017Week6.md</vh></v>
<v t="leo.20170411231408.1"><vh>@edit 2017Week7.md</vh></v>
<v t="leo.20170411235204.1"><vh>@edit 2017Week8.md</vh></v>
<v t="leo.20170419092718.1"><vh>@edit 2017Week9.md</vh></v>
<v t="leo.20170517091429.1"><vh>@edit 2017Week10.md</vh></v>
<v t="leo.20170517091501.1"><vh>@edit 2017Week11.md</vh></v>
<v t="leo.20170517103311.1"><vh>@edit 2017Week12.md</vh></v>
<v t="leo.20170517103321.1"><vh>@edit 2017Week13.md</vh></v>
<v t="leo.20170524225324.1"><vh>@edit 2017Week14.md</vh></v>
<v t="leo.20170531083652.1"><vh>@edit 2017Week15.md</vh></v>
<v t="leo.20170608224839.1"><vh>@edit 2017Week15-2.md</vh></v>
<v t="leo.20170607002243.1"><vh>@edit 2017Week16.md</vh></v>
<v t="leo.20170614084428.1"><vh>@edit 2017Week17.md</vh></v>
<v t="leo.20170621085933.1"><vh>@edit 2017Week18.md</vh></v>
<v t="yen.20170108171733.81"><vh>@path pages</vh>
<v t="yen.20170108171733.82"><vh>@edit pages_1.md</vh></v>
</v>
</v>
<v t="yen.20170108171733.83"><vh>產生 .key 與 .crt</vh></v>
</v>
<v t="yen.20170108171930.1"><vh>@button https server</vh></v>
<v t="yen.20170108171939.1"><vh>@button ipv6 https server</vh></v>
<v t="yen.20170120212350.1"><vh>programs</vh>
<v t="yen.20170210153828.1"><vh>v-rep rempte api</vh>
<v t="yen.20170210202015.1"><vh>Python remote API</vh></v>
<v t="yen.20170210170248.1"><vh>line tracer</vh></v>
<v t="yen.20170210222733.1"><vh>line tracer2</vh></v>
<v t="yen.20170210172100.1"><vh>three-link robot</vh></v>
<v t="yen.20170210221519.1"><vh>bubble</vh></v>
</v>
<v t="yen.20170120212354.1"><vh>calendar ex1</vh></v>
<v t="yen.20170120212520.1"><vh>calendar ex2</vh></v>
<v t="yen.20170120232548.1"><vh>calendar example</vh></v>
<v t="yen.20170123204227.1"><vh>印出月曆以及各課程上課日期</vh></v>
<v t="yen.20170207092354.1"><vh>協同程式參考</vh></v>
<v t="yen.20170124102405.1"><vh>chat</vh>
<v t="yen.20170124102433.1"><vh>index.html</vh></v>
</v>
</v>
<v t="yen.20170209024032.1"><vh>reference</vh></v>
<v t="leo.20170304143747.1"><vh>Recovered Nodes</vh>
<v t="leo.20170304143747.2"><vh>Recovered node "封面投影片內容" from @clean index.html</vh>
<v t="leo.20170304143747.3"><vh>old:封面投影片內容</vh></v>
<v t="leo.20170304143747.4"><vh>new:封面投影片內容</vh></v>
</v>
</v>
</vnodes>
<tnodes>
<t tx="leo.20170304143747.1"></t>
<t tx="leo.20170304143747.2">(uncached) yen.20170120110024.8
Diff...
  ## 2017Spring 協同產品設計實習
  
- ### 虎科大機械設計工程系
- 
- &lt;small&gt;
- Created by [KMOLab](http://chiamingyen.github.io/kmolab/blog/)
- &lt;/small&gt;
- 
- [協同產品設計實習課程網誌](blog/index.html)
  
  
</t>
<t tx="leo.20170304143747.3">## 2017Spring 協同產品設計實習



</t>
<t tx="leo.20170304143747.4">## 2017Spring 協同產品設計實習

### 虎科大機械設計工程系

&lt;small&gt;
Created by [KMOLab](http://chiamingyen.github.io/kmolab/blog/)
&lt;/small&gt;

[協同產品設計實習課程網誌](blog/index.html)


</t>
<t tx="leo.20170304145953.1">## 


</t>
<t tx="leo.20170304152605.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170304152605.2">## 之後試著登錄https://192.168.1.24/2017springvcp_hw/index
要記得先Proxy的進階選項設定另外的IP選項
才可以進入裡面做登錄的動作
</t>
<t tx="leo.20170304155027.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170304155027.2">## 3.用PYTHON程式碼來控制V-rep中的四連桿機構作動

進入作業倉儲的data裡面,把fourlinkage的壓縮檔解開,
得到單連桿,四連桿,八連桿,可在Solvespace和V-rep中開啟
</t>
<t tx="leo.20170304161410.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170304161410.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170304161410.11">## 使用 iframe 導入影片

### 導入影片 第二週

&lt;iframe src="https://player.vimeo.com/video/209055543" width="640" height="359" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/209055543"&gt;2017CD 第二週&lt;/a&gt; from &lt;a href="https://vimeo.com/user46447136"&gt;40423248&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</t>
<t tx="leo.20170304161410.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170304161410.3">##第二週

###1.用python程式來找出缺課同學

###2.用solvespace繪製和組立四連桿機構,再轉檔用v-rep開啟</t>
<t tx="leo.20170304161410.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170304161410.5">##1.用python程式來找出缺課同學

###到班級倉儲data下載W2資料夾裡的cd_w2.py和w2b_registered.txt，再來用程式碼印出分組名單、座位列表、缺席學生和學生總數</t>
<t tx="leo.20170304161410.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170304161410.7">##2.用solvespace繪製和組立四連桿機構,再轉檔用v-rep開啟</t>
<t tx="leo.20170304161410.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170304161410.9">&lt;img src="data/Week2/link30.png" width="500" /&gt;

&lt;img src="data/Week2/link50.png" width="500" /&gt;</t>
<t tx="leo.20170315090154.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170315090154.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170315090154.11">## 使用 iframe 導入影片

### 導入影片 第三週

&lt;iframe src="https://player.vimeo.com/video/210430506" width="640" height="359" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/210430506"&gt;2017CD 第三週&lt;/a&gt; from &lt;a href="https://vimeo.com/user46447136"&gt;40423248&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
</t>
<t tx="leo.20170315090154.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170315090154.3">##第三週

###1.打網址進入https://mde2a1.kmol.info/ 看每週進度

###2.改掉start的fossil路徑

###3.本週主要內容,至課程網頁瀏覽十部影片並挑兩部翻譯

###4.用slovespace或Onshape繪製四連桿機構並轉檔

</t>
<t tx="leo.20170315090154.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170315090154.5">###1.打網址進入 "https://mde2a1.kmol.info/"

看每週進度,點進wiki裡面的list,再點進2017springcd,就能看到每一週要做的事</t>
<t tx="leo.20170315090154.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170315090154.7">## 2.改掉start的fossil路徑,用程式來找電腦的ip位置,再由組長創建該組的https架構,以便讓組員編輯</t>
<t tx="leo.20170315090154.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170315090154.9">## 3.於課程網頁上的w3部分中從十部影片裡挑選兩部影片,做出中英文的字幕翻譯,並把字幕加入原影片中

##40423222上傳 40423245嵌入字幕 40423248翻譯 </t>
<t tx="leo.20170315092026.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170315092026.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170315092026.11">## 使用 iframe 導入影片

### 導入影片 第四週

&lt;iframe src="https://player.vimeo.com/video/212761593" width="640" height="359" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/212761593"&gt;2017CD 第四週&lt;/a&gt; from &lt;a href="https://vimeo.com/user46447136"&gt;40423248&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
</t>
<t tx="leo.20170315092026.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170315092026.3">##第四週

###1.了解x-windows , vnc , remote desktop , 的功能

###2.組長建立fossil倉儲,編輯密碼,並把組員拉入

###3.在Onshape或Slovespace中繪製單連桿機構並轉成stl檔案再導入V-REP做測試

</t>
<t tx="leo.20170315092026.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170315092026.5">###1.了解x-windows , vnc , remote desktop , 的功能

X Window系统是一種以點陣圖方式顯示的軟體視窗系統，在UNIX、類UNIX、以及OpenVMS等作業系統所一致適用的標準化軟體工具套件及顯示架構的運作協定。
可透過軟體工具及架構協定來建立作業系統所用的圖形化使用者介面，此後則逐漸擴展適用到各形各色的其他作業系統上。現在幾乎所有的作業系統都能支援與使用X。



</t>
<t tx="leo.20170315092026.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170315092026.7">### VNC為一種使用RFB協定的螢幕畫面分享及遠端操作軟體。藉由網路，可傳送鍵盤與滑鼠的動作及即時的螢幕畫面。
VNC與作業系統無關，因此可跨平台使用，例如可用Windows連線到某Linux的電腦，反之亦同。甚至在沒有安裝用戶端程式的電腦中，只要有支援JAVA的瀏覽器，也可使用。</t>
<t tx="leo.20170315092026.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170315092026.9">###遠端桌面協定是一個多通道的協定，讓使用者連上提供微軟終端機服務的電腦（伺服器端或稱「遠端電腦」）。大部份的Windows都有用戶端所需軟體。其他作業系統也有這些用戶端軟體，例如Linux、FreeBSD、Mac OS X。
</t>
<t tx="leo.20170315110355.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170315110355.2">## 4.用solvespace或Onshape繪製四連桿機構,尺寸為30,50,60公分

##繪製完成把檔案轉成.stl檔,再導入v-rep做測試</t>
<t tx="leo.20170328215422.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170328215422.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170328215422.11">## 使用 iframe 導入影片

### 導入影片 template

&lt;iframe src="https://player.vimeo.com/video/183950627" width="640" height="492" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170328215422.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328215422.3">##第五週

###1.如何在fossil筆記倉儲頁面顯示作業內容

###2.把單連桿轉為.STL檔，再導入V-rep做動態模擬

</t>
<t tx="leo.20170328215422.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328215422.5">###1.如何在fossil筆記倉儲頁面顯示作業內容

###在WIKI裡新增一個與倉儲筆記同名稱的檔案，就會在FOSSIL筆記倉儲主頁顯示

###建立時WIKI有三種格式，WIKI、MARKDOWN及HTML，安全性的排序:WIKI&gt;MARKDOWN&gt;HTML</t>
<t tx="leo.20170328215422.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328215422.7">####2.把單連桿轉為.STL檔，再導入V-rep做動態模擬

&lt;img src="data/Week4/bottom.png" width="500" /&gt;

&lt;img src="data/Week4/bar.png" width="500" /&gt;

</t>
<t tx="leo.20170328215422.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170328215422.9">## 

&lt;img src="data/Week4/link.png" width="500" /&gt;

</t>
<t tx="leo.20170411163010.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170411163010.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170411163010.11">## 使用 iframe 導入影片

### 導入影片 template

&lt;iframe src="https://player.vimeo.com/video/214692737" width="640" height="359" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/214692737"&gt;2017CD 第六週&lt;/a&gt; from &lt;a href="https://vimeo.com/user46447136"&gt;40423248&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</t>
<t tx="leo.20170411163010.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411163010.3">##第六週
##1.用Onshape裡面的變數限制條件來繪製四連桿，並導入V-REP做動
</t>
<t tx="leo.20170411163010.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411163010.5">&lt;img src="data/Week6/OS1.png" width="800" /&gt;</t>
<t tx="leo.20170411163010.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411163010.7">&lt;img src="data/Week6/OS2.png" width="800" /&gt;</t>
<t tx="leo.20170411163010.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411163010.9">&lt;img src="data/Week6/vrep.png" width="800" /&gt;</t>
<t tx="leo.20170411225536.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411225536.2">###.在Onshape或Slovespace中繪製單連桿機構並轉成stl檔案再導入V-REP做測試</t>
<t tx="leo.20170411231331.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170411231331.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170411231331.11">## 使用 iframe 導入影片

### 導入影片 template

&lt;iframe src="https://player.vimeo.com/video/183950627" width="640" height="492" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170411231331.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411231331.3">##第六週

</t>
<t tx="leo.20170411231331.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411231331.5">##1.none</t>
<t tx="leo.20170411231331.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411231331.7">## 2.</t>
<t tx="leo.20170411231331.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411231331.9">## 3.</t>
<t tx="leo.20170411232716.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411232716.2">&lt;img src="data/Week4/vrep 1.png" width="600" /&gt;

&lt;img src="data/Week4/vrep 2.png" width="600" /&gt;</t>
<t tx="leo.20170411235138.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170411235138.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170411235138.11">## 使用 iframe 導入影片

### 導入影片 template

&lt;iframe src="https://player.vimeo.com/video/183950627" width="640" height="492" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170411235138.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411235138.3">##第八週

期中自評

</t>
<t tx="leo.20170411235138.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411235138.5">##1.none</t>
<t tx="leo.20170411235138.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411235138.7">## 2.</t>
<t tx="leo.20170411235138.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170411235138.9">## 3.</t>
<t tx="leo.20170412094138.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170412094138.2">&lt;img src="data/Week4/vrep 3.png" width="600" /&gt;

&lt;img src="data/Week4/vrep 4.png" width="600" /&gt;</t>
<t tx="leo.20170412094610.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170412094610.2">&lt;img src="data/Week4/vrep 5.png" width="600" /&gt;

&lt;img src="data/Week4/vrep 6.png" width="600" /&gt;</t>
<t tx="leo.20170412094632.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170412094632.2">&lt;img src="data/Week4/vrep 7.png" width="600" /&gt;

&lt;img src="data/Week4/vrep 8.png" width="600" /&gt;</t>
<t tx="leo.20170412101850.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170412101850.2">&lt;iframe src="https://player.vimeo.com/video/208321328" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/208321328"&gt;hyperworks 14 4中英字幕&lt;/a&gt; from &lt;a href="https://vimeo.com/user57795652"&gt;40423222&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</t>
<t tx="leo.20170412101853.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170412101853.2">&lt;iframe src="https://player.vimeo.com/video/208321328" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/208321328"&gt;hyperworks 14 4中英字幕&lt;/a&gt; from &lt;a href="https://vimeo.com/user57795652"&gt;40423222&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</t>
<t tx="leo.20170412115648.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170412115648.2">&lt;img src="data/Week2/link60.png" width="500" /&gt;</t>
<t tx="leo.20170419092650.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170419092650.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170419092650.11">## 使用 iframe 導入影片

### 導入影片 template

&lt;iframe src="https://player.vimeo.com/video/213787448" width="640" height="512" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/213787448"&gt;2017CD 第九週-期中作業-四連桿機構協同 Trace Point 查驗&lt;/a&gt; from &lt;a href="https://vimeo.com/user46447136"&gt;40423248&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
</t>
<t tx="leo.20170419092650.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170419092650.3">##第九週
###期中協同查驗與自評


</t>
<t tx="leo.20170419092650.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170419092650.5">##1.Fossil Server 實習查驗

由組員或是組長在教室中用電腦建立fossil server,設定好使用者及密碼後再來是組員個別登錄上去,在wiki建立期中心得報告的格式,打入期中的心得</t>
<t tx="leo.20170419092650.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170419092650.7">&lt;img src="data/Week4/vrep 1.png" width="600" /&gt;</t>
<t tx="leo.20170419092650.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170419092650.9">## 2.四連桿機構協同 Trace Point 查驗

各組員用solvespace畫出四連桿,追蹤 T 點軌跡座標並另外檔 (請以 midterm1.csv, midterm2.csv .... 依序命名) 

各組組員請依學號遞增排序, 排序第1者負責分析 Length=50 的 T 點軌跡圖, 其餘組員則依序將 Length -5的方式來縮減上三角的尺寸</t>
<t tx="leo.20170419094610.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170419094610.2">&lt;img src="data/Week9/fourbar-1.png" width="800" /&gt;




</t>
<t tx="leo.20170419095524.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170419095524.2">&lt;img src="data/Week9/fourbar-2.png" width="800" /&gt;

</t>
<t tx="leo.20170419110809.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170419110809.2">##3.Fourbar Walker OnShape 零件協同繪圖與組立查驗

請各組依照基本尺寸規劃, 以協同方式在 OnShape 環境中完成四連桿四足行走機構, 並分別拍攝協同規劃與實際操作影片, 將影片送到 1) Youtube 2) Vimeo 以及各組的 Fossil Server.

</t>
<t tx="leo.20170419110948.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170419110948.2">&lt;img src"data/Week9/Fourbar Walker.png" width="600" /&gt;</t>
<t tx="leo.20170419111018.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170419111018.2">## 使用 iframe 導入影片

### 導入影片 template

&lt;iframe src="https://player.vimeo.com/video/213787524" width="640" height="512" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/213787524"&gt;2017CD 第九週-期中作業-Fourbar Walker OnShape 零件協同繪圖與組立查驗&lt;/a&gt; from &lt;a href="https://vimeo.com/user46447136"&gt;40423248&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
</t>
<t tx="leo.20170419114348.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170419114348.2">###心得

現在學到期中的部分,slovespace和Onshape變得比較熟練,V-REP的主從關係還是不太熟,最主要不懂的還是fossil server,得再去找人弄懂,大概給自己65分</t>
<t tx="leo.20170426173211.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170426173211.2">## 使用 iframe 導入影片

### 導入影片 template

&lt;iframe src="https://player.vimeo.com/video/214812213" width="640" height="512" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/214812213"&gt;2017CD 第九週 Fourbar Walker V-REP模擬&lt;/a&gt; from &lt;a href="https://vimeo.com/user46447136"&gt;40423248&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
</t>
<t tx="leo.20170517091052.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170517091052.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170517091052.11">## 使用 iframe 導入影片

### 導入影片 template

&lt;iframe src="https://player.vimeo.com/video/183950627" width="640" height="492" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170517091052.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170517091052.3">##第十週

</t>
<t tx="leo.20170517091052.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170517091052.5">##1.none</t>
<t tx="leo.20170517091052.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170517091052.7">## 2.</t>
<t tx="leo.20170517091052.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170517091052.9">## 3.</t>
<t tx="leo.20170517091228.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170517091228.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170517091228.11">## 使用 iframe 導入影片

### 導入影片 template

&lt;iframe src="https://player.vimeo.com/video/183950627" width="640" height="492" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170517091228.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170517091228.3">##第十一週

###1.小組協同閱讀兩本電子書翻譯並寫下心得:
###An Introduction to Agile Product Design – by Onshape.pdf (The Move To Agile Design.pdf)
###Onshape's Greatest Tech Tips– Volume 1.pdf

###2.閱讀寫心得:
###Designing Linkages in Context:
https://www.onshape.com/cad-blog/designing-linkages-in-context 

###FeatureScript:
https://www.onshape.com/cad-blog/featurescript-its-so-easy-an-engineer-can-do-it
</t>
<t tx="leo.20170517091228.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170517091228.5">#####1.小組協同閱讀兩本電子書翻譯並寫下心得

#####這裡為Onshape's Greatest Tech Tips– Volume 1.pdf

一.比較指令:
提供了可以檢視每次版本的不同,在設計時從原本的架構或是草圖,到後來隨著時間過去愈加愈多東西上去,就形成了許多的版次,
Onshape的比較指令就是用來做現在的版本與過去的版本的對照,在版本和歷史的部分用下拉式選單裡面點Compare,就可以使用,可以和之前的任意
版本做外觀和特徵的差異
</t>
<t tx="leo.20170517091228.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170517091228.7">二.跟隨模式:
可以在Onshape線上即時的和你的夥伴修改和討論產品的外觀和細節,點右上方的social cue就可以開啟此功能,能夠即時的看到夥伴的螢幕狀況,
要離開時只要在圖像上的任意處點一下左鍵就可以離開,不用像以前的CAD軟體要協同作業還需要用電子郵件或傳送截圖,又或是版本不相容等許多的問題,
Onshape的線上功能已經克服了這些問題,提供有效率又即時的線上協同工作環境</t>
<t tx="leo.20170517091228.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170517091228.9">三.匯入/導入DXF檔案:
DXF和DWG檔案是現在工業2D繪圖部分重要的標準,在Onshape裡面要導入DXF和DWG檔案可以點左上方的箭頭圖案,或是左下方的+圖案,裡面的選單也有導入的箭頭圖案,
點選導入後就可以瀏覽你想要導入的檔案,選擇你要的檔案來開啟,就可以導入至文件中,這時候可以做修改,也可以用此2D草圖來作3D建模,而要導出DXF檔的方式有兩
種,第一種是用右鍵點一下在繪圖介面上的繪圖標籤,就有導出,第二個是用右鍵點一下草圖的任意面,也有導出DXF的選項,之後就是一些選項調整,不用做繁雜的手續
來轉換檔案,只需要點個幾下就可以導入導出DXF或DWG檔案</t>
<t tx="leo.20170517095451.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170517095451.2">四.捷徑工具列
Onshape的捷徑工具列讓使用指令變的更方便,要用工具列只要在畫面上按一下S,工具列就會出現在繪圖畫面上的游標旁邊,而捷徑工具列的設定方式可以在帳號設定
找到,打開後點偏好選項就可以開始自訂功能,要加入指令需要選取想要自訂的工具列,再選取草圖,零件,組裝,接著就可以加入想要的指令</t>
<t tx="leo.20170517095507.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170517095507.2">五.加入評論
對於設計團隊來說在3D模型中加入評論是相當簡單而且是相當有效率的方式,可以在線上討論作品的問題或細節處理,不用寄送電子郵件來討論,在Onshape的頁面右上角
評論的圖示,可以把評論當成簡單的工具,能儲存和設計有關的註記,或是在線上即時和夥伴即時討論問題,也可以標記一些特定的特徵,不用互相傳截圖或電子郵件,是很
方便的功能</t>
<t tx="leo.20170517095517.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170517095517.2">六.插入時的快照模式
快照模式可以更快建立組裝件,在插入零件時快照模式也能支援,只限定在自訂義連接配合時能用,用一個步驟就可以插入和配合零件,快照模式是從組裝工具列中調用或是按
鍵盤上的S鍵,點選要連接的兩個零件的配合點,然後點著和壓著左鍵並拖曳到目標的配合點,當你把零件拖曳到可能的配合點,Onshape就會顯示出圖像預覽,如果不想要這
個位置還可以再移到其他地方,可以省去一些時間,也能看到零件配合的預覽狀況,再慢慢作調整</t>
<t tx="leo.20170517095524.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170517095524.2">七.綠色查驗(確認)以插入零件
在組合零件時的插入零件可以用綠色查驗(確認)來取代原有的零件,可以省去一開始要配對零件的時間,但零件仍需要固定,第一步要做的事是先插入第一個零件,在工具列
中點插入的指令,就會出現插入零件和組裝件的對話框,只要點選你想要的零件或多個零件就會看到該零件出現在頁面圖像中,但要注意一般在組裝視窗中插入的零件你會想
要零件是放在正中央的,這表示要取代第一個零件你不能在組裝件視窗中的空位處點左鍵,這樣零件會亂跑,反之,用左鍵點插入零件和組裝件的對話框中的綠色查驗(確認),
插入的零件就會自動取代原有的零件</t>
<t tx="leo.20170517095536.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170517095536.2">八.多重瀏覽器標籤
你可以在Onshape頁面中開啟許多的網頁標籤(視窗),想開幾個都可以,因為Onshape是以瀏覽器來運行,是以瀏覽器的基礎來運作,所以可以在頁面中同時開啟許多網頁標籤(視窗),
Onshape也支援多重螢幕顯示,可以把網頁標籤(視窗)移到其他螢幕上,能夠處理好幾個零件或組裝件,而當其中的一個零件被修改後在其他有這個零件的視窗(如組裝件)就會即時
變化,可以看到前後的差異,也可以在頁面標籤上點右鍵按在新瀏覽器標籤中開啟,這樣可以同步處理好幾個不同的零件或組裝程序,不用到處找檔案,很方便</t>
<t tx="leo.20170517095548.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170517095548.2">九.捲動到此/捲動到尾端
當特徵清單很長的時候可以在特徵歷史中前後捲動,找你想要重新檢視或修改的特徵,但是當特徵清單很長又有幾個特徵需要多次修改時,就要用到捲動到此/捲動到尾端得兩個功能,
在特徵清單中找到想要修改的特徵時,再此特徵上點右鍵按Roll to here(捲動到此)的指令,系統就會把特徵清單尾端定在這裡,當修改完畢時就在特徵列上按Roll to end(捲動到尾端),
系統就會把位置定回原來的尾端特徵,這樣要修改某個特徵時就不用到處找,找到就可以直接固定,不用弄得很麻煩</t>
<t tx="leo.20170517095600.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170517095600.2">十.再導入檔案時按著Shift來點選檔案
能夠省去手動一個一個點你想要的檔案的時間,可以點個兩三下就導入很多的檔案,當你想要從其他的CAD系統中導入檔案時就會用到這功能,要導入檔案時按左上方的箭頭圖案,
或是左下方的+圖案,點選導入後就可以瀏覽你想要導入的檔案,這時按著Shift點第一個檔案再點最後一個檔案,全部的檔案都會被選取,就可以同時導入多個檔案
</t>
<t tx="leo.20170517102725.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170517102725.2">#####2.閱讀寫心得:
#####Designing Linkages in Context:
https://www.onshape.com/cad-blog/designing-linkages-in-context </t>
<t tx="leo.20170517102728.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170517102728.2">###2.閱讀寫心得:
###FeatureScript:
https://www.onshape.com/cad-blog/featurescript-its-so-easy-an-engineer-can-do-it</t>
<t tx="leo.20170517103152.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170517103152.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170517103152.11">## 使用 iframe 導入影片

### 導入影片 template

&lt;iframe src="https://player.vimeo.com/video/183950627" width="640" height="492" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170517103152.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170517103152.3">##第十二週

使用漸開線原理, 用 Brython來繪製單一個正齒輪的輪廓</t>
<t tx="leo.20170517103152.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170517103152.5">##1.none</t>
<t tx="leo.20170517103152.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170517103152.7">## 2.</t>
<t tx="leo.20170517103152.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170517103152.9">## 3.</t>
<t tx="leo.20170517103219.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170517103219.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170517103219.11">## 使用 iframe 導入影片

### 導入影片 template

&lt;iframe src="https://player.vimeo.com/video/221450668" width="640" height="359" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;</t>
<t tx="leo.20170517103219.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170517103219.3">###第十三週上課內容

###1.用OnShape來繪製漸開線齒輪
###參考:https://www.khkgears.co.jp/tw/gear_technology/pdf/gear_guide1.pdf</t>
<t tx="leo.20170517103219.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170517103219.5">###1.用OnShape來繪製漸開線齒輪
###參考:https://www.khkgears.co.jp/tw/gear_technology/pdf/gear_guide1.pdf</t>
<t tx="leo.20170524225239.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170524225239.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170524225239.11">## 使用 iframe 導入影片

### 導入影片 template

&lt;iframe src="https://player.vimeo.com/video/183950627" width="640" height="492" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170524225239.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170524225239.3">##第十四週
架設ubuntu伺服器

###Ubuntu簡介:
###Ubuntu是基於Debian的Linux發行版。Debian的版本更新時間不固定，但Ubuntu會固定在每年的4月和10月釋出新版(每半年一新版)，版本號碼就是「年份.月份」，例如在2014年4月發佈的版本，號碼就是14.04；在2009年10月發佈的版本，號碼就是9.10。通常每隔兩年會釋出一個更新支援期長達2年以上的LTS(Long Term Support)版本，例如10.04、12.04、14.04、16.04就是LTS版，LTS版本因為支援期長，有很多時間修復BUG，因此愈後期的LTS版，執行起來會更穩定，如果有架設伺服器的需求，安裝LTS版本會是較好的選擇，尤其又以安裝專門用來架設伺服器的Ubuntu Server最好。</t>
<t tx="leo.20170524225239.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170524225239.5">##1.none</t>
<t tx="leo.20170524225239.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170524225239.7">## 2.</t>
<t tx="leo.20170524225239.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170524225239.9">## 3.</t>
<t tx="leo.20170531083720.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170531083720.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170531083720.11">## 使用 iframe 導入影片

### 導入影片 template

&lt;iframe src="https://player.vimeo.com/video/183950627" width="640" height="492" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170531083720.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170531083720.3">##第十四週
架設ubuntu伺服器

###Ubuntu簡介:
###Ubuntu是基於Debian的Linux發行版。Debian的版本更新時間不固定，但Ubuntu會固定在每年的4月和10月釋出新版(每半年一新版)，版本號碼就是「年份.月份」，例如在2014年4月發佈的版本，號碼就是14.04；在2009年10月發佈的版本，號碼就是9.10。通常每隔兩年會釋出一個更新支援期長達2年以上的LTS(Long Term Support)版本，例如10.04、12.04、14.04、16.04就是LTS版，LTS版本因為支援期長，有很多時間修復BUG，因此愈後期的LTS版，執行起來會更穩定，如果有架設伺服器的需求，安裝LTS版本會是較好的選擇，尤其又以安裝專門用來架設伺服器的Ubuntu Server最好。</t>
<t tx="leo.20170531083720.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170531083720.5">##1.none</t>
<t tx="leo.20170531083720.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170531083720.7">## 2.</t>
<t tx="leo.20170531083720.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170531083720.9">## 3.</t>
<t tx="leo.20170607002207.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170607002207.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170607002207.11">## 使用 iframe 導入影片

### 導入影片 template

&lt;iframe src="https://player.vimeo.com/video/183950627" width="640" height="492" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170607002207.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170607002207.3">##第十六週上課內容 W16
</t>
<t tx="leo.20170607002207.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170607002207.5">##1.老師介紹怎麼用Xming來連結Fossil伺服器
&lt;img src="data/Week16/xming-install1.png" width="600" /&gt;</t>
<t tx="leo.20170607002207.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170607002207.7">## 2.</t>
<t tx="leo.20170607002207.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170607002207.9">## 3.</t>
<t tx="leo.20170621084842.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170621084842.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170621084842.11">## 使用 iframe 導入影片

### 導入影片 template

&lt;iframe src="https://player.vimeo.com/video/183950627" width="640" height="492" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170621084842.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170621084842.3">##第十六週上課內容 W16
</t>
<t tx="leo.20170621084842.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170621084842.5">##1.老師介紹怎麼用Xming來連結Fossil伺服器
&lt;img src="data/Week16/xming-install1.png" width="600" /&gt;</t>
<t tx="leo.20170621084842.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170621084842.7">## 2.</t>
<t tx="leo.20170621084842.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170621084842.9">## 3.</t>
<t tx="leo.20170621084849.1">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="leo.20170621084849.10">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170621084849.11">## 使用 iframe 導入影片

### 導入影片 template

&lt;iframe src="https://player.vimeo.com/video/183950627" width="640" height="492" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="leo.20170621084849.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170621084849.3">##第十八週上課內容 W18

###1.大概的介紹自己在其中之後做了哪些事

###2.以下連結到行走機構網址:

https://40423222.github.io/2017springcd_bg7/blog/%E6%9C%9F%E6%9C%AB%E8%A8%88%E7%95%AB-%E8%A1%8C%E8%B5%B0%E6%A9%9F%E6%A7%8B.html
</t>
<t tx="leo.20170621084849.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170621084849.5">##1.老師介紹怎麼用Xming來連結Fossil伺服器
&lt;img src="data/Week16/xming-install1.png" width="600" /&gt;</t>
<t tx="leo.20170621084849.6">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170621084849.7">## 2.</t>
<t tx="leo.20170621084849.8">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="leo.20170621084849.9">## 3.</t>
<t tx="yen.20170108171605.1"></t>
<t tx="yen.20170108171605.2">QTreeWidget {
    /* These apply to the selected item, but not to editing items.*/
    background-color: #ffffec; /* Leo's traditional tree color */
    selection-color: black; /* was white */
    selection-background-color: lightgrey;
    /* font-family: SansSerif; */
    /*font-family: DejaVu Sans Mono;*/
    font-family:YaHei Mono;
    /* 標題字型大小設定 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
 }

/* Headline edit widgets */
QTreeWidget QLineEdit {
    background-color: cornsilk;
    selection-color: white;
    selection-background-color: blue;
    /*font-family: DejaVu Sans Mono;*/    
    font-family:YaHei Mono;
    /* 沒有特別對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The log panes */
QTextEdit {
    background-color: #f2fdff;
    selection-color: red;
    selection-background-color: blue;
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* log font 大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The body pane */
QTextEdit#richTextEdit {
    background-color: #fdf5f5; /* A kind of pink. */
    selection-color: white;
    selection-background-color: red;
    /*font-family: DejaVu Sans Mono;*/
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* 內文字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

QLabel {
    font-family:YaHei Mono;'CherryPy', 'pytz', 'mako', 'beautifulsoup4', 'pymysql', 'peewee'
    /* 下方的 Minibuffer 標題字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

/* Editor labels */
QLineEdit#editorLabel {
    background-color: #ffffec;
    font-family:YaHei Mono;
    /* 沒有直接對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
    border: 2px;
    margin: 2px;
}</t>
<t tx="yen.20170108171605.3">horizontal: body pane to the left
vertical: body pane on the botton</t>
<t tx="yen.20170108171622.1">2017 Spring CD 機械設計工程系協同產品設計實習

倉儲位置: https://github.com/mdecourse/2017springcd

每一協同成員都應該要在 users 目錄下有一個 Leo 檔案

</t>
<t tx="yen.20170108171733.1"></t>
<t tx="yen.20170108171733.2">@language python
import os
#os.system("pelican content -o output -s local_publishconf.py -t theme/pelican-bootstrap3")
os.system("pelican content -o blog -s local_publishconf.py")
g.es("admin pelican 近端執行完畢")


</t>
<t tx="yen.20170108171733.5"></t>
<t tx="yen.20170108171733.71"></t>
<t tx="yen.20170108171733.81"></t>
<t tx="yen.20170108171733.83">sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout localhost.key -out localhost.crt

</t>
<t tx="yen.20170108171930.1">@language python
import os
import subprocess
import threading
import http.server, ssl

def domake():
    # build directory
    os.chdir("./../")
    server_address = ('localhost', 7443)
    httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)
    httpd.socket = ssl.wrap_socket(httpd.socket,
                                   server_side=True,
                                   certfile='localhost.crt',
                                   keyfile='localhost.key',
                                   ssl_version=ssl.PROTOCOL_TLSv1)
    print("7443 https server started")
    httpd.serve_forever()

# 利用執行緒執行 https 伺服器
make = threading.Thread(target=domake)
make.start()</t>
<t tx="yen.20170108171939.1">@language python
import os
import subprocess
import threading
import socket
import http.server, ssl

class HTTPServerV6(http.server.HTTPServer):
    address_family = socket.AF_INET6
  
def domake():
    # build directory
    os.chdir("./../")
    ipv6_address = '2001:288:6004:17:3004::808'
    server_address = (ipv6_address, 6443)
    #httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)
    httpd = HTTPServerV6(server_address, http.server.SimpleHTTPRequestHandler)
    httpd.socket = ssl.wrap_socket(httpd.socket,
                                   server_side=True,
                                   certfile='localhost.crt',
                                   keyfile='localhost.key',
                                   ssl_version=ssl.PROTOCOL_TLSv1)
    print("6443 https server started")
    httpd.serve_forever()

# 利用執行緒執行 https 伺服器
make = threading.Thread(target=domake)
make.start()</t>
<t tx="yen.20170120110024.1">@language xml
@tabwidth -4
@others

</t>
<t tx="yen.20170120110024.10"># 投影片快捷鍵

* 利用箭頭上下前後換頁
* 按 f 鍵進入全螢幕模式 (full screen)
* 按 s 鍵可以顯示投影片筆記 (show)
* 按 o 鍵可以切換單張或全域檢視 (overview)
* 按 b 或 . 鍵可以切換螢幕黑屏 (black)
* 按 Esc 可以退出全螢幕或全域檢視 (Escape)

</t>
<t tx="yen.20170120110024.11">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="yen.20170120110024.12">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="yen.20170120110024.13">##第一週

###1.本學期課程概要

登錄Github到老師的Mdecourse的倉儲看大綱

有介紹一些3D軟體的相聯性

概略介紹C和PYTHON的優缺點

</t>
<t tx="yen.20170120110024.14">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="yen.20170120110024.15">###2.用正確的方式打開Stunnel

進入tiny2017_700MB&gt;data&gt;stunnel&gt;config裡面,修改stunnel.conf
內容中的最後一段IP位置,要先在cmd中用ipconfig/all找出自己的IPV4位置
把這個IPV4位置覆蓋掉stunnel.conf最後一段IP位置後儲存,再把fossil程式關掉
重新打開程式就會正常顯示</t>
<t tx="yen.20170120110024.16">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="yen.20170120110024.17">## 使用 iframe 導入影片

### 導入影片 第一週

&lt;iframe src="https://player.vimeo.com/video/209055449" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/209055449"&gt;2017CD 第一週&lt;/a&gt; from &lt;a href="https://vimeo.com/user46447136"&gt;40423248&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
</t>
<t tx="yen.20170120110024.2">&lt;!doctype html&gt;
&lt;html lang="en"&gt;
@others
&lt;/html&gt;
</t>
<t tx="yen.20170120110024.3">&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
&lt;title&gt;
2017 Spring 機械設計工程系協同產品設計實習
&lt;/title&gt;
    &lt;meta name="description" content="A framework for easily creating beautiful presentations using HTML"&gt;
    &lt;meta name="author" content="Hakim El Hattab"&gt;
    
    &lt;meta name="apple-mobile-web-app-capable" content="yes"&gt;
    &lt;meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"&gt;
    
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"&gt;
    
    &lt;link rel="stylesheet" href="https://cad-lab.github.io/cadlab_data/reveal/css/reveal.css"&gt;
    &lt;link rel="stylesheet" href="https://cad-lab.github.io/cadlab_data/reveal/css/theme/black.css" id="theme"&gt;
    
    &lt;!-- Theme used for syntax highlighting of code --&gt;
    &lt;link rel="stylesheet" href="https://cad-lab.github.io/cadlab_data/reveal/lib/css/zenburn.css"&gt;

    &lt;!-- Printing and PDF exports --&gt;
    &lt;script&gt;
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = window.location.search.match( /print-pdf/gi ) ? 'https://cad-lab.github.io/cadlab_data/reveal/css/print/pdf.css' : 'https://cad-lab.github.io/cadlab_data/reveal/css/print/paper.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
    &lt;/script&gt;

    &lt;!--[if lt IE 9]&gt;
    &lt;script src="https://cad-lab.github.io/cadlab_data/reveal/lib/js/html5shiv.js"&gt;&lt;/script&gt;
    &lt;![endif]--&gt;
&lt;/head&gt;

</t>
<t tx="yen.20170120110024.4">&lt;body&gt;
@others
&lt;script src="https://cad-lab.github.io/cadlab_data/reveal/lib/js/head.min.js"&gt;&lt;/script&gt;
&lt;script src="https://cad-lab.github.io/cadlab_data/reveal/js/reveal.js"&gt;&lt;/script&gt;
&lt;script&gt;
        // More info https://github.com/hakimel/reveal.js#configuration
        Reveal.initialize({
            controls: true,
            progress: true,
            history: true,
            center: true,

            transition: 'slide', // none/fade/slide/convex/concave/zoom

            // More info https://github.com/hakimel/reveal.js#dependencies
            dependencies: [
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/lib/js/classList.js', condition: function() { return !document.body.classList; } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/zoom-js/zoom.js', async: true },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/notes/notes.js', async: true },
                { src: 'https://cad-lab.github.io/cadlab_data/reveal/plugin/math/math.js', async: true }
            ]
        });
&lt;/script&gt;
&lt;/body&gt;
</t>
<t tx="yen.20170120110024.5">&lt;div class="reveal"&gt;
@others
&lt;/div&gt;

</t>
<t tx="yen.20170120110024.6">&lt;!-- Any section element inside of this container is displayed as a slide --&gt;
&lt;div class="slides"&gt;
@others
&lt;/div&gt;

</t>
<t tx="yen.20170120110024.7">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="yen.20170120110024.8">## 2017Spring 協同產品設計實習

### 虎科大機械設計工程系

####學員 40423248 課程簡報

[網誌連結](https://40423248.github.io/2017springcd_hw/blog/index.html)

&lt;small&gt;
Created by [KMOLab](http://chiamingyen.github.io/kmolab/blog/)
&lt;/small&gt;

[協同產品設計實習課程網誌](blog/index.html)


</t>
<t tx="yen.20170120110024.9">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="yen.20170120212350.1"></t>
<t tx="yen.20170120212354.1">@language python
import calendar

#calendar.setfirstweekday(calendar.SUNDAY)
# 設每週第1天為星期日
cal = calendar.TextCalendar(calendar.SUNDAY)
# 直接印出文字月曆
#cal.prmonth(2017, 7)

try:
    g.es(cal.formatyear(2017, 2, 1, 1, 3))
except:
    print(cal.formatyear(2017, 2, 1, 1, 3))</t>
<t tx="yen.20170120212520.1">import calendar
import pprint

cal = calendar.Calendar(calendar.SUNDAY)

cal_data = cal.yeardays2calendar(2017, 3)
print('len(cal_data)      :', len(cal_data))

top_months = cal_data[0]
print('len(top_months)    :', len(top_months))

first_month = top_months[0]
print('len(first_month)   :', len(first_month))

print('first_month:')
pprint.pprint(first_month, width=65)</t>
<t tx="yen.20170120232548.1">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
        "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"&gt; 
&lt;head&gt;
&lt;title&gt;Brython - 15-puzzle demo&lt;/title&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;

&lt;script type="text/javascript"
    src="/src/brython_dist.js"&gt;
&lt;/script&gt;


&lt;style type="text/css" media="screen"&gt;
  body { 
    font: 12px/15px Calibri, Verdana;
    margin: 0px;
    background:#ddd;
    padding: 0px;
  }
#container{
    position: absolute;
    border-width:1px;
    border-radius: 10px;
    border-style: solid;
    border-color: #000;
    background-color: #333;
}
#zone {
    position: absolute;
    background-color:#666;
    color: #fff;
    font-size: 16px;
    line-height:20px;
    padding: 0px;
}
.square{
    position: absolute;
    color: #000; 
    background: #fcfff4; /* old browsers */
    background: linear-gradient(to bottom, #fcfff4 0%,#dfe5d7 40%,#b3bead 100%);
    /* background-color: orange; */
    border-width: 1px;
    border-style: solid;
    border-radius: 5px;
    border-color: #200;
    text-align: center;
}
&lt;/style&gt;

&lt;meta name="viewport" content="width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;"/&gt;
&lt;/head&gt;   
&lt;body onload="brython(1)"&gt;

&lt;script type="text/python"&gt;
from browser import window, document, alert, html
import datetime
import calendar
import locale

w_height = window.innerHeight
w_width = window.innerWidth

locale.setlocale(locale.LC_ALL, '')

today = datetime.date.today()
year, month = today.year, today.month

zone = document["zone"]
c_width = w_width//7
c_height = w_height//6

cal = calendar.Calendar()

month_head = html.DIV('%s %s' %(calendar.month_name[month], year),
    style=dict(left=0, width=7*c_width),
    Class="square"
    )
zone &lt;= month_head

for dnum, day in enumerate(calendar.day_name):
    cell = html.DIV(day, 
        style=dict(left=dnum*c_width, top=20,
                   width=c_width, height=20),
        Class="square")
    zone &lt;= cell

for wnum, week in enumerate(cal.monthdatescalendar(year, month)):
    for dnum, day in enumerate(week):
        cell = html.DIV(day.day, 
            style=dict(left=dnum*c_width, top=40+wnum*c_height,
                       width=c_width, height=c_height,
                       lineHeight='%spx' %c_height),
            Class="square")
        if day.month == month:
            cell.style.color = "#000"
        else:
            cell.style.color = "#999"
        if day == today:
            cell.style.background = "linear-gradient(to bottom, #dcfff4 0%,#bfe5d7 40%,#93bead 100%)"
        zone &lt;= cell
&lt;/script&gt;

&lt;div id="container"&gt;
    &lt;div id="zone"&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;
</t>
<t tx="yen.20170123204227.1">&lt;style  type="text/css"&gt;
table{
    border: 1px solid black;
    table-layout: fixed;
    width: 100%;
    text-align: center;
}

th, td {
    width: 14%;
    text-align: center;
}
&lt;/style&gt;
&lt;div id="cal1"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document, html
import calendar
import locale

z = html.DIV()
z.style = {"padding": "5px", 
               "backgroundColor": "#ADD8E6",
               "width": "50%"}
cal = calendar.HTMLCalendar(calendar.SUNDAY)
for i in range(1, 5):
    z.html += cal.formatmonth(2017, i)
document["cal1"] &lt;= z
&lt;/script&gt;

&lt;div id="cal2"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document, html
import calendar
import locale

cal2 = document["cal2"]
'''
# default calendar MONDAY is the first day of the week
count = 0
output = "2017 2bCD (三) 08:10-12:00 各週上課日期: "
for month in range(2, 7):
    monthArray = calendar.monthcalendar(2017, month)
    for week in range(len(monthArray)):
        weekArray = monthArray[week]
        # 只需要列出星期三
        if weekArray[2] != 0:
            if month == 2:
                if weekArray[2] &gt; 20:
                    count += 1
                    if count &lt;= 18:
                        output += "W"+str(count)+"-"+ str(month)+ "/" + str(weekArray[2]) + ","
            else:
                count += 1
                if count &lt;= 18:
                    output += "W"+str(count)+"-"+ str(month)+ "/" + str(weekArray[2]) + ","
cal2 &lt;= output
'''

def getClassdate(year=2017, startM=2, startD=20, w=0, note=""):
    # w=0 表示課程排在星期一
    # startM 表示開學月份, startD 表示開學日
    # note 為課程初始告示
    # default calendar MONDAY is the first day of the week
    # 每學期共有 18 週
    totalW = 18
    count = 0
    # output = "2017 Spring 2bCD (三) 08:10-12:00 各週上課日期: "
    output = note + html.BR()
    # 若必須全年搜尋則 7 改為 12, 但是因為只有 18 週, 因此邏輯要修改讓程式較快結束
    for month in range(startM, 7):
        monthArray = calendar.monthcalendar(2017, month)
        for week in range(len(monthArray)):
            weekArray = monthArray[week]
            # 只需要列出星期 (w+1)
            if weekArray[w] != 0:
                if month == startM:
                    if weekArray[startM] &gt; startD:
                        count += 1
                        if count &lt;= totalW:
                            output += "w"+str(count)+"-"+ str(month)+ "/" + str(weekArray[w]) + ", "
                else:
                    count += 1
                    if count &lt;=  totalW:
                        output += "w"+str(count)+"-"+ str(month)+ "/" + str(weekArray[w]) + ", "
    cal2 &lt;= output

# 2b 協同產品設計實習 (三 w=2)
getClassdate(year=2017, startM=2, startD=20, w=2, note="2017 Spring 2bCD (三) 08:10-12:00 各週上課日期: ")
cal2 &lt;= html.BR() + html.BR()
# 2a 協同產品設計實習 (四 w=3)
getClassdate(year=2017, startM=2, startD=20, w=3, note="2017 Spring 2aCD (四) 08:10-12:00 各週上課日期: ")
cal2 &lt;= html.BR() + html.BR()
# 1a 網際內容管理 (五 w=4)
getClassdate(year=2017, startM=2, startD=20, w=4, note="2017 Spring 1aWCM (五) 13:20-16:10 各週上課日期: ")
cal2 &lt;= html.BR() + html.BR()
# VE1a 網際內容管理 (五 w=4)
getClassdate(year=2017, startM=2, startD=20, w=4, note="2017 Spring VE1aCP (五) 18:30-20:00 各週上課日期: ")
cal2 &lt;= html.BR() + html.BR()
&lt;/script&gt;</t>
<t tx="yen.20170124102405.1">from flask import Flask 
from flask_socketio import SocketIO, send

app = Flask(__name__)
app.config['SECRET_KEY'] = 'mysecret'
socketio = SocketIO(app)

@socketio.on('message')
def handleMessage(msg):
	print('Message: ' + msg)
	send(msg, broadcast=True)

if __name__ == '__main__':
	socketio.run(app)</t>
<t tx="yen.20170124102433.1">&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Chat Room&lt;/title&gt;
&lt;script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/1.4.8/socket.io.min.js"&gt;&lt;/script&gt;
&lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;script type="text/javascript"&gt;
$(document).ready(function() {

	var socket = io.connect('http://127.0.0.1:5000');

	socket.on('connect', function() {
		socket.send('User has connected!');
	});

	socket.on('message', function(msg) {
		$("#messages").append('&lt;li&gt;'+msg+'&lt;/li&gt;');
		console.log('Received message');
	});

	$('#sendbutton').on('click', function() {
		socket.send($('#myMessage').val());
		$('#myMessage').val('');
	});

});
&lt;/script&gt;
&lt;ul id="messages"&gt;&lt;/ul&gt;
&lt;input type="text" id="myMessage"&gt;
&lt;button id="sendbutton"&gt;Send&lt;/button&gt;
&lt;/body&gt;
&lt;/html&gt;</t>
<t tx="yen.20170207092354.1">##利用 IPv6 網路傳輸設計檔案

&lt;pre class="brush: python"&gt;
import socket
from http.server import HTTPServer, SimpleHTTPRequestHandler

class MyHandler(SimpleHTTPRequestHandler):
  def do_GET(self):
    if self.path == '/ip':
      self.send_response(200)
      self.send_header('Content-type', 'text/html')
      self.end_headers()
      self.wfile.write('Your IP address is %s' % self.client_address[0])
      return
    else:
      return SimpleHTTPRequestHandler.do_GET(self)

class HTTPServerV6(HTTPServer):
  address_family = socket.AF_INET6

def main():
  server = HTTPServerV6(('::', 8080), MyHandler)
  server.serve_forever()

if __name__ == '__main__':
  main()
&lt;/pre&gt;


##電腦的多重處理

&lt;a href="http://www.davekuhlman.org/python_multiprocessing_01.html"&gt;http://www.davekuhlman.org/python_multiprocessing_01.html&lt;/a&gt;

xmlrpc server:

&lt;pre class="brush: python"&gt;
from xmlrpc.server import SimpleXMLRPCServer
from xmlrpc.server import SimpleXMLRPCRequestHandler

# Restrict to a particular path.
class RequestHandler(SimpleXMLRPCRequestHandler):
    rpc_paths = ('/RPC2',)

# Create server
with SimpleXMLRPCServer(("localhost", 8000),
                        requestHandler=RequestHandler) as server:
    server.register_introspection_functions()

    # Register pow() function; this will use the value of
    # pow.__name__ as the name, which is just 'pow'.
    server.register_function(pow)

    # Register a function under a different name
    def adder_function(x,y):
        return x + y
    server.register_function(adder_function, 'add')

    # Register an instance; all the methods of the instance are
    # published as XML-RPC methods (in this case, just 'mul').
    class MyFuncs:
        def mul(self, x, y):
            return x * y

    server.register_instance(MyFuncs())

    # Run the server's main loop
    server.serve_forever()
&lt;/pre&gt;

xmlrpc client:

&lt;pre class="brush: python"&gt;
import xmlrpc.client

s = xmlrpc.client.ServerProxy('http://localhost:8000')
print(s.pow(2,3))  # Returns 2**3 = 8
print(s.add(2,3))  # Returns 5
print(s.mul(5,2))  # Returns 5*2 = 10

# Print list of available methods
print(s.system.listMethods())
&lt;/pre&gt;

Another xmlrpc server:

&lt;pre class="brush: python"&gt;
import datetime

class ExampleService:
    def getData(self):
        return '42'

    class currentTime:
        @staticmethod
        def getCurrentTime():
            return datetime.datetime.now()

with SimpleXMLRPCServer(("localhost", 8000)) as server:
    server.register_function(pow)
    server.register_function(lambda x,y: x+y, 'add')
    server.register_instance(ExampleService(), allow_dotted_names=True)
    server.register_multicall_functions()
    print('Serving XML-RPC on localhost port 8000')
    try:
        server.serve_forever()
    except KeyboardInterrupt:
        print("\nKeyboard interrupt received, exiting.")
        sys.exit(0)
&lt;/pre&gt;

Another xmlrpc client:

&lt;pre class="brush: python"&gt;
import xmlrpc.client

server = xmlrpc.client.ServerProxy("http://localhost:8000")

try:
    print(server.currentTime.getCurrentTime())
except Error as v:
    print("ERROR", v)

multi = MultiCall(server)
multi.getData()
multi.pow(2,9)
multi.add(1,2)
try:
    for response in multi():
        print(response)
except Error as v:
    print("ERROR", v)
&lt;/pre&gt;

ssl xmlrpc:

&lt;pre class="brush: python"&gt;
"""Monkey patching standard xmlrpc.server.SimpleXMLRPCServer
to run over TLS (SSL)

Changes inspired on http://www.cs.technion.ac.il/~danken/SecureXMLRPCServer.py
"""
import socket
import socketserver
import ssl
from xmlrpc.server import SimpleXMLRPCServer, SimpleXMLRPCDispatcher, SimpleXMLRPCRequestHandler
try:
    import fcntl
except ImportError:
    fcntl = None


class SimpleXMLRPCServerTLS(SimpleXMLRPCServer):
    def __init__(self, addr, requestHandler=SimpleXMLRPCRequestHandler,
                 logRequests=True, allow_none=False, encoding=None, bind_and_activate=True):
        """Overriding __init__ method of the SimpleXMLRPCServer

        The method is an exact copy, except the TCPServer __init__
        call, which is rewritten using TLS
        """
        self.logRequests = logRequests

        SimpleXMLRPCDispatcher.__init__(self, allow_none, encoding)

        """This is the modified part. Original code was:

            socketserver.TCPServer.__init__(self, addr, requestHandler, bind_and_activate)

        which executed:

            def __init__(self, server_address, RequestHandlerClass, bind_and_activate=True):
                BaseServer.__init__(self, server_address, RequestHandlerClass)
                self.socket = socket.socket(self.address_family,
                                            self.socket_type)
                if bind_and_activate:
                    self.server_bind()
                    self.server_activate()

        """
        socketserver.BaseServer.__init__(self, addr, requestHandler)
        self.socket = ssl.wrap_socket(
            socket.socket(self.address_family, self.socket_type),
            server_side=True,
            certfile='cert.pem',
            cert_reqs=ssl.CERT_NONE,
            ssl_version=ssl.PROTOCOL_SSLv23,
            )
        if bind_and_activate:
            self.server_bind()
            self.server_activate()

        """End of modified part"""

        # [Bug #1222790] If possible, set close-on-exec flag; if a
        # method spawns a subprocess, the subprocess shouldn't have
        # the listening socket open.
        if fcntl is not None and hasattr(fcntl, 'FD_CLOEXEC'):
            flags = fcntl.fcntl(self.fileno(), fcntl.F_GETFD)
            flags |= fcntl.FD_CLOEXEC
            fcntl.fcntl(self.fileno(), fcntl.F_SETFD, flags)
&lt;/pre&gt;

 Server端
 
 
&lt;pre class="brush: python"&gt;
#Python 2
#import SimpleXMLRPCServer
#Python 3
import xmlrpc.server

host = "127.0.0.1"
port = 1234

def handle(msg):
    #Python 2
    #print "Handle message: " + msg
    #Python 3
    print("Handle message: " + msg)

    ret = "Hello! I have received your message."
    return ret

def main():
    #Python 2
    #server = SimpleXMLRPCServer.SimpleXMLRPCServer((host, port))
    #Python 3
    server = xmlrpc.server.SimpleXMLRPCServer((host, port))

    server.register_function(handle)
    server.serve_forever()

if __name__ == "__main__":
    main()
&lt;/pre&gt;

Client端:

&lt;pre class="brush: python"&gt;
#Python 2
#import xmlrpclib
#Python 3
import xmlrpc.client

host = "http://127.0.0.1:1234"

def main():
    #Python 2
    #server = xmlrpclib.ServerProxy(hots)
    #Python 3
    server = xmlrpc.client.ServerProxy(host)

    result = server.handle("Welcome.")

    #Python 2
    #print result
    #Python 3
    print(result)

if __name__ == "__main__":
    main()
&lt;/pre&gt;


有一些地方要注意：

    Python 2 和Python 3 的 xmlrpc library不同，範例裡有用註解表示Python 2的寫法。
    
    Python 2 和Python 3 的print也不同。
    
    SimpleXMLRPCServer() 的參數是 tuple 型態，host 要給字串，port 要給整數。
    
    server的host設定為127.0.0.1，client就只能連線到127.0.0.1；換句話說，server的host若設定成192.168.1.1，client即使在本機，也不能透過127.0.0.1連線，只能連線到192.168.1.1。
    
    client端呼叫一次server端的handle()，socket連線即結束；要再次呼叫的話，要再執行一次ServerProxy()。
    
    server端可以一次註冊多個function。
    
    serve_forever()要放在最後面呼叫，因為呼叫完即進入server的main routine。
    
&lt;a href="https://github.com/etopian/python3-xmlrpc-ssl-basic-auth"&gt;https://github.com/etopian/python3-xmlrpc-ssl-basic-auth&lt;/a&gt;

&lt;pre class="brush: python"&gt;
'''
Created on Jun 20, 2011

XMLRPC server to run over HTTPS

@author: mraposa
'''
import socket
import socketserver
import ssl
import pickle
import xmlrpc.client
from xmlrpc.server import SimpleXMLRPCServer, SimpleXMLRPCDispatcher, SimpleXMLRPCRequestHandler
try:
    import fcntl
except ImportError:
    fcntl = None

#    Easiest way to create the key file pair was to use OpenSSL -- http://openssl.org/ Windows binaries are available
#    You can create a self-signed certificate easily "openssl req -new -x509 -days 365 -nodes -out cert.pem -keyout privatekey.pem"
#    for more information --  http://docs.python.org/library/ssl.html#ssl-certificates
KEYFILE='c:\\delete\\privatekey.pem'    # Replace with your PEM formatted key file
CERTFILE='c:\\delete\\cert.pem'  # Replace with your PEM formatted certificate file

userPassDict = {"mraposa":"test123",
                "jsmith":"hellow"}
   
class SimpleXMLRPCServerTLS(SimpleXMLRPCServer):
    def __init__(self, addr, requestHandler=SimpleXMLRPCRequestHandler,
                 logRequests=True, allow_none=False, encoding=None, bind_and_activate=True):
        """Overriding __init__ method of the SimpleXMLRPCServer

        The method is an exact copy, except the TCPServer __init__
        call, which is rewritten using TLS
        """
        self.logRequests = logRequests

        SimpleXMLRPCDispatcher.__init__(self, allow_none, encoding)

        """This is the modified part. Original code was:

            socketserver.TCPServer.__init__(self, addr, requestHandler, bind_and_activate)

        which executed:

            def __init__(self, server_address, RequestHandlerClass, bind_and_activate=True):
                BaseServer.__init__(self, server_address, RequestHandlerClass)
                self.socket = socket.socket(self.address_family,
                                            self.socket_type)
                if bind_and_activate:
                    self.server_bind()
                    self.server_activate()

        """
        class VerifyingRequestHandler(SimpleXMLRPCRequestHandler):
            '''
            Request Handler that verifies username and password passed to
            XML RPC server in HTTP URL sent by client.
            '''
            # this is the method we must override
            def parse_request(self):
                # first, call the original implementation which returns
                # True if all OK so far
                if SimpleXMLRPCRequestHandler.parse_request(self):
                    # next we authenticate
                    if self.authenticate(self.headers):
                        return True
                    else:
                        # if authentication fails, tell the client
                        self.send_error(401, 'Authentication failed')
                return False
           
            def authenticate(self, headers):
                from base64 import b64decode
                #    Confirm that Authorization header is set to Basic
                (basic, _, encoded) = headers.get('Authorization').partition(' ')
                assert basic == 'Basic', 'Only basic authentication supported'
               
                #    Encoded portion of the header is a string
                #    Need to convert to bytestring
                encodedByteString = encoded.encode()
                #    Decode Base64 byte String to a decoded Byte String
                decodedBytes = b64decode(encodedByteString)
                #    Convert from byte string to a regular String
                decodedString = decodedBytes.decode()
                #    Get the username and password from the string
                (username, _, password) = decodedString.partition(':')
                #    Check that username and password match internal global dictionary
                if username in userPassDict:
                    if userPassDict[username] == password:
                        return True
                return False
       
        #    Override the normal socket methods with an SSL socket
        socketserver.BaseServer.__init__(self, addr, VerifyingRequestHandler)
        self.socket = ssl.wrap_socket(
            socket.socket(self.address_family, self.socket_type),
            server_side=True,
            keyfile=KEYFILE,
            certfile=CERTFILE,
            cert_reqs=ssl.CERT_NONE,
            ssl_version=ssl.PROTOCOL_SSLv23,
            )
        if bind_and_activate:
            self.server_bind()
            self.server_activate()

        """End of modified part"""

        # [Bug #1222790] If possible, set close-on-exec flag; if a
        # method spawns a subprocess, the subprocess shouldn't have
        # the listening socket open.
        if fcntl is not None and hasattr(fcntl, 'FD_CLOEXEC'):
            flags = fcntl.fcntl(self.fileno(), fcntl.F_GETFD)
            flags |= fcntl.FD_CLOEXEC
            fcntl.fcntl(self.fileno(), fcntl.F_SETFD, flags)

# Restrict to a particular path.
class RequestHandler(SimpleXMLRPCRequestHandler):
    rpc_paths = ('/RPC2',)

def executeRpcServer():
    # Create server
    server = SimpleXMLRPCServerTLS(("localhost", 443), requestHandler=RequestHandler)
    server.register_introspection_functions()

    # Register pow() function; this will use the value of
    # pow.__name__ as the name, which is just 'pow'.
    server.register_function(pow)

    # Register a function under a different name
    def adder_function(x,y):
        return x + y
    server.register_function(adder_function, 'add')

    # Register an instance; all the methods of the instance are
    # published as XML-RPC methods (in this case, just 'div').
    class MyFuncs:
        def div(self, x, y):
            return x // y
       
        def enterUID(self, uid):
            print (uid)
            return "Got uid " + uid
       
        #    For this test pickle function I am assuming the pickled object is just a list
        def uploadPickle(self, pickleStringBinary):
            #    Get the binary data from the pickled string
            pickleData = pickleStringBinary.data
            #    Unpickle the data into an object
            pickObject = pickle.loads(pickleData)
            #    Print the object to test
            print (pickObject[-1])
            #    Modify the object to test
            pickObject.append("Server got pickled object")
            #    Pickle the object. Protocol=2 is required to support Python v2 clients
            newPickleString = pickle.dumps(pickObject, protocol=2)
            #    Label the string binary and send it back to the XML client
            return xmlrpc.client.Binary(newPickleString)

    server.register_instance(MyFuncs())

    # Run the server's main loop
    print("Starting XML RPC Server")
    server.serve_forever()


if __name__ == '__main__':  
    executeRpcServer()

 

The client code would look something like this:

def xmlRpcClient(pickableObject):
    '''
    Connects to RPC server for HTTPs. This is simply a demo function to showcase
    what can be done.
    @param pickleString:
    '''

    import pickle
    import xmlrpclib

    #    Connects to server
    #    Can only connect over HTTPS with HTTPS server
    #    Server supports passing username and password
    s = xmlrpclib.ServerProxy('https://mraposa:test123@localhost:443')
    #     Runs various functions on the remote server
    print s.pow(2,3)  # Returns 2**3 = 8
    print s.add(2,3)  # Returns 5
    print s.div(5,2)  # Returns 5//2 = 2
   
    #    Uploads a pickable object to XML RPC server.
    #    First pickles the object into a string -- Uses protocol=2 to enforce Python 2 vs 3 compatibility
    #    Then send the string as a binary over XMLRPC. Sending a string results in conversion errors from
    #    Python 2 to 3
    #    Server returns a binary pickled object back
    pickleString = pickle.dumps(pickableObject, protocol=2)
    newPickleStringBinary = s.uploadPickle(xmlrpclib.Binary(pickleString))
   
    #    gets Binary data from returned results
    newPickleString = newPickleStringBinary.data
    #    Load the new pickle data into a new object
    newPickleObject = pickle.loads(newPickleString)
    print ("Client got object: " + newPickleObject[-1])

    # Print list of available methods
    print s.system.listMethods()
&lt;/pre&gt;

Python dokuwiki:

&lt;a href="https://github.com/fmenabe/python-dokuwiki"&gt;https://github.com/fmenabe/python-dokuwiki&lt;/a&gt;

Qpython:

&lt;a href="http://qpython.com/"&gt;http://qpython.com/&lt;/a&gt;

Kivy:

&lt;a href="https://kivy.org/#home"&gt;https://kivy.org/#home&lt;/a&gt;

##Asynchronous JavaScript and XML

Ajax for Brython:

&lt;a href="http://stackoverflow.com/questions/26021672/how-to-use-ajax-in-brython"&gt;http://stackoverflow.com/questions/26021672/how-to-use-ajax-in-brython&lt;/a&gt;

##Chat 工具

建立一個 chat 工具:

&lt;a href=""https://github.com/PrettyPrinted/flask-socketio-chat&gt;https://github.com/PrettyPrinted/flask-socketio-chat&lt;/a&gt;

&lt;a href="https://blog.miguelgrinberg.com/post/easy-websockets-with-flask-and-gevent"&gt;https://blog.miguelgrinberg.com/post/easy-websockets-with-flask-and-gevent&lt;/a&gt;

&lt;a href="https://github.com/callmephilip/chatzilla"&gt;https://github.com/callmephilip/chatzilla&lt;/a&gt;

##雲端空間

&lt;a href="https://www.heroku.com/pricing"&gt;https://www.heroku.com/pricing&lt;/a&gt;

#計算機程式課程回顧

##電腦基本知識

###電腦基本軟硬體設定

操作系統

網路設定

###近端與與遠端檔案管理

可攜程式環境

robodk based programming 

glowscript based simulation

brython based simulation

git 與 github

計算機程式課程的目的, 在利用 Leo Editor 與 Brython 導入 Python3 單機與網際程式環境, 讓學員能夠利用 Python3 程式語法管理機械設計資料, 並且利用網際程式進行基本的機械設計工程分析.

##管理機械設計資料

##機械設計工程分析

#電腦輔助設計實習課程回顧

電腦輔助設計實習課程的目的, 在銜接計算機程式課程, 利用 3D 參數繪圖與設計軟體, 進一步導入較為具像的產品設計內容, 其中包括產品零件的設計與繪圖, 產品機構的運動分析, 產品功能的展示等.

四連桿 - Solvespace - V-rep - arduino stepper motor control

八連桿 - Solvespace - V-rep - arduino stepper motor control

#協同產品設計實習

2D 齒輪組傳動囓合設計繪圖

3D 齒輪組傳動囓合設計繪圖

Onshape featurescript

電腦輔助設計實習課程的目的, 在銜接計算機程式與電腦輔助設計實習課程, 主要利用 Onshape 與 Github 讓學員進行分組同步與非同步產品開發實習.

##Onshape 同步協同

同步協同原理

同步協同優缺點

##Github 非同步協同

非同步協同原理

非同步協同優缺點

##協同設計題目: 機械計時器(?)

機械計時器 (mechanical clock) 協同設計 (Jupyterlab, solvespace 與 onshape)、模擬 (V-rep)與製作 (delta printer)

以機械傳動顯示計時器之秒、分與時數, 協同設計佔 30%, 模擬佔 30%, 製作佔 40%.

協同設計 - 協同性、創新性、實用性, 所有資料都必須以 Leo Editor, Pelican 網誌與 Reveal 簡報展示.

系統模擬 - 必須以 Solvespace + Onshape 設計零組件, 並在 V-rep 中模擬, 並且以 Jupyterlab 執行運算分析.

### 利用伺服器執行 Python3 程式

Jupyterhub: &lt;a href="https://8888.kmol.info:9443"&gt;https://8888.kmol.info:9443&lt;/a&gt;</t>
<t tx="yen.20170209024032.1">https://studywolf.wordpress.com/

https://github.com/studywolf/blog/tree/master/VREP

https://www.youtube.com/channel/UCiK0J5wtnyX2jP-AiGbdhjg

V-rep

http://www.cnblogs.com/21207-iHome/tag/V-rep/</t>
<t tx="yen.20170210153828.1">根據 http://www.coppeliarobotics.com/helpFiles/en/remoteApiServerSide.htm 中的說明.

V-rep 啟動時, 會根據系統目錄下的 remoteApiConnections.txt 檔案中的設定, 啟動  rempte api 功能:

// This file defines all the continuous remote API server services (started at remote API plugin initialization, i.e. V-REP start-up)
//
// Each remote API server service requires following 3 entries:
//
// portIndex@_port = xxxx               // where xxxx is the desired port number (below 19997 are preferred for server services starting at V-REP start-up)
// portIndex@_debug = xxxx              // where xxxx is true or false
// portIndex@_syncSimTrigger = xxxx     // where xxxx is true or false. When true, then the service will be pre-enabled for synchronous operation.
//
// In above strings, @ can be any number starting with 1. If more than one server service is required, then numbers need to be consecutive and starting with 1

// Let's start a continuous remote API server service on port 19997:
portIndex1_port             = 19997
portIndex1_debug            = false
portIndex1_syncSimTrigger   = true

若要自行加入 rempte api 執行的 port 則在 server 的 child script 中設定:

Server 端:

simExtRemoteApiStart(19999)

Client 端:

clientID = vrep.simxStart('127.0.0.1', 19999, True, True, 5000, 5)

import vrep
import sys
# child threaded script: 
# 內建使用 port 19997 若要加入其他 port, 在  serve 端程式納入
#simExtRemoteApiStart(19999)
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)
 
if clientID!= -1:
    print("Connected to remote server")
else:
    print('Connection not successful')
    sys.exit('Could not connect')
 
errorCode,Revolute_joint_handle=vrep.simxGetObjectHandle(clientID,'Revolute_joint',vrep.simx_opmode_oneshot_wait)
 
if errorCode == -1:
    print('Can not find left or right motor')
    sys.exit()
 
errorCode=vrep.simxSetJointTargetVelocity(clientID,Revolute_joint_handle,2, vrep.simx_opmode_oneshot_wait)

while True:
    choice = input("&gt;")
    if choice == "e":
        print("exiting")
        vrep.simxStopSimulation(clientID, vrep.simx_opmode_oneshot_wait)
        break
    elif choice == "p":
        vrep.simxPauseSimulation(clientID, vrep.simx_opmode_oneshot_wait)
    else:
        vrep.simxStartSimulation(clientID, vrep.simx_opmode_oneshot_wait)





</t>
<t tx="yen.20170210170248.1"># -*- coding: utf-8 -*-
try:
    import vrep
except:
    print ('--------------------------------------------------------------')
    print ('"vrep.py" could not be imported. This means very probably that')
    print ('either "vrep.py" or the remoteApi library could not be found.')
    print ('Make sure both are in the same folder as this file,')
    print ('or appropriately adjust the file "vrep.py"')
    print ('--------------------------------------------------------------')
    print ('')

import time
import sys
import ctypes

print ('Program started')
vrep.simxFinish(-1)
clientID=vrep.simxStart('127.0.0.1',19999,True,True,5000,5)

if clientID!=-1:
    print ('Connected to remote API server')
else:
    print ('Failed connecting to remote API server')
    sys.exit('Program Ended')

    
nominalLinearVelocity = 0.3
wheelRadius           = 0.027
interWheelDistance    = 0.119
    
res,objs=vrep.simxGetObjects(clientID, vrep.sim_handle_all,vrep.simx_opmode_blocking)
if res==vrep.simx_return_ok:
    print ('Number of objects in the scene: ',len(objs))
else:
    print ('Remote API function call returned with error code: ',res)

time.sleep(2)

startTime=time.time()
vrep.simxGetIntegerParameter(clientID,vrep.sim_intparam_mouse_x,vrep.simx_opmode_streaming)

res, display     = vrep.simxGetUIHandle(clientID, "sensorDisplay", vrep.simx_opmode_blocking)
res, leftSensor  = vrep.simxGetObjectHandle(clientID, "LeftSensor", vrep.simx_opmode_blocking)
res, middleSensor= vrep.simxGetObjectHandle(clientID, "MiddleSensor", vrep.simx_opmode_blocking)
res, rightSensor = vrep.simxGetObjectHandle(clientID, "RightSensor", vrep.simx_opmode_blocking)
res, leftJointDynamic  = vrep.simxGetObjectHandle(clientID, "DynamicLeftJoint" , vrep.simx_opmode_blocking)
res, rightJointDynamic = vrep.simxGetObjectHandle(clientID, "DynamicRightJoint", vrep.simx_opmode_blocking)

if res != vrep.simx_return_ok:
    print ('Failed to get sensor Handler')
    vrep.simxFinish(clientID)
    sys.exit('Program ended')

def setLeds(elHandle, left, middle, right):
    vrep.simxSetUIButtonProperty(clientID, elHandle,  8, 
        vrep.sim_buttonproperty_staydown, vrep.simx_opmode_oneshot)
    vrep.simxSetUIButtonProperty(clientID, elHandle, 16, 
        vrep.sim_buttonproperty_staydown, vrep.simx_opmode_oneshot)
    vrep.simxSetUIButtonProperty(clientID, elHandle, 24, 
        vrep.sim_buttonproperty_staydown, vrep.simx_opmode_oneshot)
    if left:
        vrep.simxSetUIButtonProperty(clientID, elHandle, 8, 
            vrep.sim_buttonproperty_staydown + vrep.sim_buttonproperty_isdown, vrep.simx_opmode_oneshot)
    if middle:
        vrep.simxSetUIButtonProperty(clientID, elHandle,16, 
            vrep.sim_buttonproperty_staydown + vrep.sim_buttonproperty_isdown, vrep.simx_opmode_oneshot)
    if right:
        vrep.simxSetUIButtonProperty(clientID, elHandle,24, 
            vrep.sim_buttonproperty_staydown + vrep.sim_buttonproperty_isdown, vrep.simx_opmode_oneshot)

sensorReading=[False, False, False]
sensorReading[0]=(vrep.simxReadVisionSensor(clientID, leftSensor,   vrep.simx_opmode_streaming )==1)
sensorReading[1]=(vrep.simxReadVisionSensor(clientID, middleSensor, vrep.simx_opmode_streaming )==1)
sensorReading[2]=(vrep.simxReadVisionSensor(clientID, rightSensor,  vrep.simx_opmode_streaming )==1)

while time.time() - startTime &lt; 50:
    returnCode,data=vrep.simxGetIntegerParameter(clientID,vrep.sim_intparam_mouse_x,vrep.simx_opmode_buffer) # Try to retrieve the streamed data
    
    # Read the sensors:

    sensorReading[0]=(vrep.simxReadVisionSensor(clientID, leftSensor,   vrep.simx_opmode_buffer)[1])
    sensorReading[1]=(vrep.simxReadVisionSensor(clientID, middleSensor, vrep.simx_opmode_buffer)[1])
    sensorReading[2]=(vrep.simxReadVisionSensor(clientID, rightSensor,  vrep.simx_opmode_buffer)[1])
    
    setLeds(display,sensorReading[0],sensorReading[1],sensorReading[2])

    # Decide about left and right velocities:
    s = 1.0
    linearVelocityLeft  = nominalLinearVelocity * s
    linearVelocityRight = nominalLinearVelocity * s

    if not sensorReading[0]:
        linearVelocityLeft  = linearVelocityLeft*0.3
    if not sensorReading[2]:
        linearVelocityRight = linearVelocityRight*0.3

    vrep.simxSetJointTargetVelocity(clientID, leftJointDynamic, linearVelocityLeft/(s*wheelRadius), vrep.simx_opmode_oneshot)
    vrep.simxSetJointTargetVelocity(clientID, rightJointDynamic,linearVelocityRight/(s*wheelRadius), vrep.simx_opmode_oneshot)
    
    time.sleep(0.005)</t>
<t tx="yen.20170210172100.1"># -*- coding: utf-8 -*-
# http://www.cnblogs.com/21207-iHome/p/5955535.html
import vrep             # V-rep library
import sys      
import time
import math  

# This function will convert an angle to the equivalent rotation in the range [-pi,pi]
def ConfineAngle(angle):
    angle = angle % (2.0 * math.pi)
    if( angle &lt; -math.pi ):
        angle += (2.0 * math.pi)
    if( angle &gt; math.pi ):
        angle -= (2.0 * math.pi)
    return angle


def CalcIK():
    id = linkNum - 1
    while id &gt;= 0:
        retcode, J_pos = vrep.simxGetObjectPosition(clientID,joint_handle[id],-1,vrep.simx_opmode_oneshot_wait)
        retcode, tip = vrep.simxGetObjectPosition(clientID,tip_handle, -1, vrep.simx_opmode_oneshot_wait)
        
        # Get the vector from the current bone to the end effector position.
        curToEndX = tip[0] - J_pos[0]
        curToEndY = tip[1] - J_pos[1]
        curToEndMag = math.sqrt( curToEndX*curToEndX + curToEndY*curToEndY )
          
        # Get the vector from the current bone to the target position.
        curToTargetX = target[0] - J_pos[0];
        curToTargetY = target[1] - J_pos[1];
        curToTargetMag = math.sqrt(curToTargetX*curToTargetX+curToTargetY*curToTargetY)
          
        # Get rotation 
        endTargetMag = curToEndMag*curToTargetMag
        if endTargetMag &lt;= 0.0001:    # prevent division by small numbers
            cosRotAng = 1
            sinRotAng = 0
        else:
            cosRotAng = (curToEndX*curToTargetX + curToEndY*curToTargetY) / endTargetMag
            sinRotAng = (curToEndX*curToTargetY - curToEndY*curToTargetX) / endTargetMag
        
        # Clamp the cosine into range when computing the angle(might be out of rangedue to floating point error)
        rotAng = math.acos(max(-1, min(1,cosRotAng)))
        if  sinRotAng &lt; 0.0:
            rotAng = -rotAng
                
        q[id] = q[id] + rotAng
        
        # Rotate the current link
        if(id == 0):
            vrep.simxSetJointPosition(clientID,joint_handle[id], ConfineAngle(q[id])+math.pi/2, vrep.simx_opmode_oneshot)
        else:
            vrep.simxSetJointPosition(clientID,joint_handle[id], ConfineAngle(q[id]), vrep.simx_opmode_oneshot)
        
        # Check for termination
        retcode, tip = vrep.simxGetObjectPosition(clientID,tip_handle, -1, vrep.simx_opmode_oneshot_wait)
        endToTargetX = (target[0] - tip[0])
        endToTargetY = (target[1] - tip[1])
        error = math.sqrt(endToTargetX*endToTargetX + endToTargetY*endToTargetY)
        if( error &lt;= stol ):
            # We found a valid solution.
            return 1, error
        id = id - 1
        
    return 0, error  # cannot get to the target in this iteration
    
    
        
if __name__ == "__main__":
    # Starts a communication thread with the server
    clientID = vrep.simxStart('127.0.0.1', 20001, True, True, 5000, 5)
    
    # clientID: the client ID, or -1 if the connection to the server was not possible
    if clientID != -1:  #check if client connection successful
        print 'Connected to remote API server'
    else:
        print 'Connection not successful'
        sys.exit('Could not connect')    # Exit from Python


    # Retrieves an object handle based on its name.
    errorCode,tip_handle = vrep.simxGetObjectHandle(clientID,'tip',vrep.simx_opmode_oneshot_wait)
    errorCode,target_handle = vrep.simxGetObjectHandle(clientID,'target',vrep.simx_opmode_oneshot_wait)
    errorCode,consoleHandle = vrep.simxAuxiliaryConsoleOpen(clientID,'info',4,1+4,None,None,None,None,vrep.simx_opmode_oneshot_wait)
    joint_handle = [-1,-1,-1]    # store the joint handles
    for i in range(3):
        errorCode,joint_handle[i] = vrep.simxGetObjectHandle(clientID,'j'+str(i+1),vrep.simx_opmode_oneshot_wait)

    ilimit = 100    # maximum iteration
    stol = 1e-2     # tolerance
    q = [0,0,0]     # initial joint value
    linkNum = 3     # number of links
    
    retcode, target = vrep.simxGetObjectPosition(clientID,target_handle, -1, vrep.simx_opmode_oneshot_wait)
    retcode, tip = vrep.simxGetObjectPosition(clientID,tip_handle, -1, vrep.simx_opmode_oneshot_wait)
    
    count = 0    
    isOK = 0
    while ( not isOK ):    
        isOK,err = CalcIK()
        
        vrep.simxAuxiliaryConsolePrint(clientID,consoleHandle,None,vrep.simx_opmode_oneshot_wait) 
        count = count + 1
        vrep.simxAuxiliaryConsolePrint(clientID,consoleHandle,str(count)+' iterations err:'+str(err),vrep.simx_opmode_oneshot_wait)   
        
        if count &gt; ilimit:
            vrep.simxAuxiliaryConsolePrint(clientID,consoleHandle,"Solution wouldn't converge\r\n",vrep.simx_opmode_oneshot_wait)
            break
        #time.sleep(0.1)
    
    # Ends the communication thread. This should be the very last remote API function called on the client side
    vrep.simxFinish(clientID)</t>
<t tx="yen.20170210202015.1">simxCloseScene
simxCopyPasteObjects
simxCreateDummy
simxDisplayDialog
simxEndDialog 
simxEraseFile
simxFinish
simxGetArrayParameter
</t>
<t tx="yen.20170210221519.1">import vrep
import sys
import time

print('Program started')

portNb = 0
leftMotorHandle = 0
rightMotorHandle = 0
sensorHandle = 0

if len(sys.argv) &gt;= 5:
    portNb = int(sys.argv[1])
    leftMotorHandle = int(sys.argv[2])
    rightMotorHandle = int(sys.argv[3])
    sensorHandle = int(sys.argv[4])
else:
    print("Indicate following arguments: 'portNumber leftMotorHandle rightMotorHandle sensorHandle'")
    time.sleep(5000.0 / 1000.0)
    sys.exit(0)

vrep.simxFinish(-1) # just in case, close all opened connections
clientID = vrep.simxStart('127.0.0.1', portNb, True, True, 2000, 5)
if clientID != -1:
    print 'Connected to remote API server'
    driveBackStartTime = -99000
    motorSpeeds = [0, 0]

    while vrep.simxGetConnectionId(clientID) != -1:
        (errorCode, detectionState, detectedPoint, detectedObjectHandle, detectedSurfaceNormalVector) = vrep.simxReadProximitySensor(clientID, sensorHandle, vrep.simx_opmode_streaming)
        if errorCode == vrep.simx_return_ok:
            simulationTime = vrep.simxGetLastCmdTime(clientID)
            if simulationTime - driveBackStartTime &lt; 3000:
                motorSpeeds[0] = -3.1415 * 0.5
                motorSpeeds[1] = -3.1415 * 0.25
            else:
                motorSpeeds[0] = 3.1415
                motorSpeeds[1] = 3.1415
                if detectionState:
                    driveBackStartTime = simulationTime

            errorCode = vrep.simxSetJointTargetVelocity(clientID, leftMotorHandle, motorSpeeds[0], vrep.simx_opmode_oneshot)
            vrep.simxSetJointTargetVelocity(clientID, rightMotorHandle, motorSpeeds[1], vrep.simx_opmode_oneshot)
            if errorCode != vrep.simx_return_ok:
                print("SetJointTargetVelocity got error code: %s" % errorCode)

        else:
            print("ReadProximitySensor got error code: %s" % errorCode)

        time.sleep(5.0 / 1000.0)

    vrep.simxFinish(clientID)
else:
    print('Failed connecting to remote API server')
print('Program ended')</t>
<t tx="yen.20170210222733.1">##==============================================================#
## SECTION: Imports                                             #
##==============================================================#

import vrep

##==============================================================#
## SECTION: Class Definitions                                   #
##==============================================================#

class Robot:
    def __init__(self, client_id, opmode):
        self.cid = client_id
        self.op = opmode

        # Setup wheel joints.
        self.wj_locs = ["Left","Right"]
        self.wjs = {}
        for loc in self.wj_locs:
            name = "Dynamic{0}Joint".format(loc)
            _,h = vrep.simxGetObjectHandle(client_id, name, opmode)
            self.wjs[loc] = h

        # Setup vision sensors.
        self.vs_locs = ["Left","Middle","Right"]
        self.vss = {}
        for loc in self.vs_locs:
            name = "{0}Sensor".format(loc)
            _,h = vrep.simxGetObjectHandle(client_id, name, opmode)
            self.vss[loc] = h

    def set_wheel_vel(self, left, right):
        """Sets the wheel target velocities."""
        vrep.simxSetJointTargetVelocity(self.cid, self.wjs['Left'], left, self.op)
        vrep.simxSetJointTargetVelocity(self.cid, self.wjs['Right'], right, self.op)

    def get_wheel_vel(self):
        """Returns the wheel velocities as a list of (left,right)."""
        vels = []
        for loc in self.wj_locs:
            _,vel = vrep.simxGetObjectFloatParameter(self.cid, self.wjs[loc], vrep.sim_jointfloatparam_velocity, self.op)
            vels.append(vel)
        return vels

    def get_vis_sensors(self):
        """Returns a list of lists containing the average red/green/blue value
        from the left/middle/right vision sensor."""
        aves = []
        for loc in self.vs_locs:
            h = self.vss[loc]
            _,_,pkt = vrep.simxReadVisionSensor(client_id, h, opmode)
            aves.append(pkt[0][11:14])
        return aves

##==============================================================#
## SECTION: Function Definitions                                #
##==============================================================#

def is_green(a):
    """Returns true if the reading from Robot.get_vis_sensors() is green."""
    return (a[0] &lt; 0.4 and a[2] &lt; 0.4) and (a[1] &gt; 0.5)

##==============================================================#
## SECTION: Main Body                                           #
##==============================================================#

if __name__ == '__main__':
    vrep.simxFinish(-1) # Stop any running simulation.
    client_id = vrep.simxStart("127.0.0.1", 19997, True, True, 5000, 5)
    if client_id == -1:
        print("Failed to connect.")
        exit()
    print("Connected to V-REP.")
    print("Running robot logic, will exit when simulation is ended...")
    try:
        opmode = vrep.simx_opmode_blocking
        vrep.simxStartSimulation(client_id, opmode)
        robot = Robot(client_id, opmode)
        robot.set_wheel_vel(1.0, 1.0)
        vrep.simxSynchronousTrigger(client_id)
        while True:
            # Very simple robot line following logic.
            l,m,r = robot.get_vis_sensors()
            if is_green(m):
                robot.set_wheel_vel(1.0, 1.0)
            elif is_green(l):
                robot.set_wheel_vel(0.2, 1.0)
            elif is_green(r):
                robot.set_wheel_vel(1.0, 0.2)
            vrep.simxSynchronousTrigger(client_id)
    except:
        vrep.simxFinish(client_id)
        print("Simulation ended.")
</t>
<t tx="yen.20170215103217.1"></t>
<t tx="yen.20170215103228.1"></t>
</tnodes>
</leo_file>
